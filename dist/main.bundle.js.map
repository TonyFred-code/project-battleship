{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://BattleShip Game/./src/style.css","webpack://BattleShip Game/./node_modules/css-loader/dist/runtime/api.js","webpack://BattleShip Game/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://BattleShip Game/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://BattleShip Game/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://BattleShip Game/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://BattleShip Game/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://BattleShip Game/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://BattleShip Game/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://BattleShip Game/webpack/bootstrap","webpack://BattleShip Game/./src/helper_module/create-element-with-class.js","webpack://BattleShip Game/webpack/runtime/compat get default export","webpack://BattleShip Game/webpack/runtime/define property getters","webpack://BattleShip Game/webpack/runtime/global","webpack://BattleShip Game/webpack/runtime/hasOwnProperty shorthand","webpack://BattleShip Game/webpack/runtime/publicPath","webpack://BattleShip Game/webpack/runtime/nonce","webpack://BattleShip Game/./src/helper_module/number-transform.js","webpack://BattleShip Game/./src/GAME_SETTINGS/game-settings.js","webpack://BattleShip Game/./src/dom_module/game-play.js","webpack://BattleShip Game/./src/ship.js","webpack://BattleShip Game/./src/board-node.js","webpack://BattleShip Game/./src/carrier.js","webpack://BattleShip Game/./src/destroyer.js","webpack://BattleShip Game/./src/submarine.js","webpack://BattleShip Game/./src/battleship.js","webpack://BattleShip Game/./src/patrol-boat.js","webpack://BattleShip Game/./src/helper_module/number.js","webpack://BattleShip Game/./src/helper_module/rnd-array-element.js","webpack://BattleShip Game/./src/game-board.js","webpack://BattleShip Game/./src/player.js","webpack://BattleShip Game/./src/human-player.js","webpack://BattleShip Game/./src/computer-player.js","webpack://BattleShip Game/./src/game-round.js","webpack://BattleShip Game/./src/game-controller.js","webpack://BattleShip Game/./src/style.css?7163","webpack://BattleShip Game/./src/main.js","webpack://BattleShip Game/./src/dom_module/loading-screen.js","webpack://BattleShip Game/./src/dom_module/home-page.js","webpack://BattleShip Game/./src/dom_module/round-loss-modal.js","webpack://BattleShip Game/./src/dom_module/round-win-modal.js","webpack://BattleShip Game/./src/dom_module/tutorial-page.js","webpack://BattleShip Game/./src/dom_module/play-setup.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml {\n  box-sizing: inherit;\n  height: 100%;\n  font-size: 10px;\n}\n\n:root {\n  --base-node-size: 20px;\n}\n\nbody {\n  font-size: 1.6rem;\n  line-height: 1.3;\n  letter-spacing: 1.5px;\n  height: 100%;\n  text-transform: lowercase;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\ndialog {\n  margin: auto;\n  border: 2px inset black;\n  min-width: 200px;\n  min-height: 200px;\n  width: 85%;\n}\n\nbutton:active,\nbutton:focus {\n  outline: none;\n}\n\nul {\n  list-style: none;\n}\n\n.z_index_1 {\n  z-index: 1;\n}\n\n.z_index_2 {\n  z-index: 2;\n}\n\n.z_index_3 {\n  z-index: 3;\n}\n\n.hidden {\n  display: none;\n}\n\n.icon_container {\n  width: 2.5rem;\n  height: 2.5rem;\n  padding: 3px;\n  box-sizing: initial;\n}\n\n.cursor_pointer {\n  cursor: pointer;\n}\n\n.cursor_crosshair {\n  cursor: crosshair;\n}\n\n.img,\nimg {\n  width: 100%;\n  max-width: 100%;\n  height: 100%;\n  max-height: 100%;\n}\n\n.text-align__center {\n  text-align: center;\n}\n\n.text-transform__uppercase {\n  text-transform: uppercase;\n}\n\n.text-transform__capitalize {\n  text-transform: capitalize;\n}\n\n.text-transform__lowercase {\n  text-transform: lowercase;\n}\n\n.container {\n  width: 100%;\n  max-width: 1128px;\n}\n\n.d-flex__row {\n  display: flex;\n  flex-direction: row;\n}\n\n.d-flex__col {\n  display: flex;\n  flex-direction: column;\n}\n\n.flex-direction__col {\n  flex-direction: column;\n}\n\n.flex-direction__row {\n  flex-direction: row;\n}\n\n.justify-content__center {\n  justify-content: center;\n}\n\n.justify-content__space-around {\n  justify-content: space-around;\n}\n.justify-content__space-between {\n  justify-content: space-between;\n}\n\n.align-items__center {\n  align-items: center;\n}\n\n.centered_flex {\n  justify-content: center;\n  align-items: center;\n}\n\n.gap_10 {\n  gap: 10px;\n}\n\n.gap_5 {\n  gap: 5px;\n}\n\n.gap_2 {\n  gap: 2px;\n}\n\n.gap_1r {\n  gap: 1rem;\n}\n\n.gap_2r {\n  gap: 2rem;\n}\n\n.d-flex {\n  display: flex;\n}\n\n.padding-top_10 {\n  padding-top: 10px;\n}\n\n.padding-bottom_10 {\n  padding-bottom: 10px;\n}\n\n.padding-left_10 {\n  padding-left: 10px;\n}\n\n.padding-right_10 {\n  padding-right: 10px;\n}\n\n.padding_10 {\n  padding: 10px;\n}\n\n.padding_2r {\n  padding: 2rem;\n}\n\n.btn {\n  cursor: pointer;\n  border: 1.5px solid black;\n  outline: none;\n}\n\n.btn:active,\n.btn:hover {\n  opacity: 0.5;\n}\n\n.fz_2-4r {\n  font-size: 2.4rem;\n}\n\n.fz_2r {\n  font-size: 2rem;\n}\n\n.fz_1-8r {\n  font-size: 1.8rem;\n}\n\n/* LOADING SCREEN */\n\n.loading-title {\n  text-align: center;\n}\n\n.loading-title h1 {\n  font-size: 1.5rem;\n  letter-spacing: 2px;\n}\n\n.loading-title h2 {\n  font-size: 3.5rem;\n  letter-spacing: 1.8px;\n}\n\n.loading-screen {\n  height: 100%;\n  text-align: center;\n}\n\n.loading-bar {\n  height: auto;\n  width: 100%;\n}\n\n.loading-line {\n  height: var(--base-node-size);\n  border: 2px solid red;\n  border-radius: 100px;\n}\n\n.line {\n  height: 100%;\n  border-radius: 100px;\n  background-color: red;\n  animation-name: loading;\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n  animation-duration: 2.5s;\n  animation-delay: 200ms;\n  animation-timing-function: cubic-bezier(0, 0, 0, 0);\n  animation-direction: normal;\n}\n\n.loading-screen.loading-complete .line {\n  background-color: #6565f5;\n}\n\n.loading-screen.loading-screen.loading-complete .loading-line {\n  border-color: #6565f5;\n}\n\n@keyframes loading {\n  0% {\n    width: 0%;\n  }\n\n  100% {\n    width: 100%;\n  }\n}\n\n.loading-text {\n  font-size: 1.5rem;\n  letter-spacing: 1.3px;\n}\n\n.loader {\n  display: inline-block;\n  margin-left: 3px;\n  width: 24px;\n  aspect-ratio: 4;\n  background: radial-gradient(circle closest-side, #000 90%, #0000) 0 /\n    calc(100% / 3) 100% space;\n  clip-path: inset(0 100% 0 0);\n  animation: l1 1.5s steps(4) infinite;\n}\n\n@keyframes l1 {\n  to {\n    clip-path: inset(0 -34% 0 0);\n  }\n}\n\n/* LOADING SCREEN ENDS */\n\n/* HOME PAGE */\n.home-page {\n  height: 100%;\n}\n\n.home-page .btn {\n  cursor: pointer;\n}\n\n.home-page__btn-group {\n  width: 50%;\n  max-width: 200px;\n}\n\n.home-page__btn-group .btn {\n  padding: 12px 20px;\n  font-size: 1.5rem;\n}\n\n.tutorial-btn-container {\n  position: absolute;\n  top: 25px;\n  left: 25px;\n}\n\n.tutorial__btn {\n  padding: 6px 14px;\n  font-weight: bolder;\n  font-size: 3rem;\n}\n/* HOME PAGE ENDS */\n\n/* GAME SETUP PAGE */\n.game-setup {\n  height: 100%;\n  text-align: center;\n}\n\n.game-setup .container {\n  justify-content: center;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: var(--base-node-size) 1fr;\n  grid-template-rows: var(--base-node-size) 1fr;\n  grid-template-areas:\n    '. row-label'\n    'col-label board-items';\n}\n\n.bot-player-board {\n  grid-template-columns: 1fr var(--base-node-size);\n  grid-template-areas:\n    'row-label .'\n    'board-items col-label';\n}\n\n.board-item-container {\n  grid-area: board-items;\n  display: grid;\n  grid-template-columns: repeat(10, var(--base-node-size));\n  grid-template-rows: repeat(10, var(--base-node-size));\n  grid-template-areas:\n    'X0-Y0 X1-Y0 X2-Y0 X3-Y0 X4-Y0 X5-Y0 X6-Y0 X7-Y0 X8-Y0 X9-Y0'\n    'X0-Y1 X1-Y1 X2-Y1 X3-Y1 X4-Y1 X5-Y1 X6-Y1 X7-Y1 X8-Y1 X9-Y1'\n    'X0-Y2 X1-Y2 X2-Y2 X3-Y2 X4-Y2 X5-Y2 X6-Y2 X7-Y2 X8-Y2 X9-Y2'\n    'X0-Y3 X1-Y3 X2-Y3 X3-Y3 X4-Y3 X5-Y3 X6-Y3 X7-Y3 X8-Y3 X9-Y3'\n    'X0-Y4 X1-Y4 X2-Y4 X3-Y4 X4-Y4 X5-Y4 X6-Y4 X7-Y4 X8-Y4 X9-Y4'\n    'X0-Y5 X1-Y5 X2-Y5 X3-Y5 X4-Y5 X5-Y5 X6-Y5 X7-Y5 X8-Y5 X9-Y5'\n    'X0-Y6 X1-Y6 X2-Y6 X3-Y6 X4-Y6 X5-Y6 X6-Y6 X7-Y6 X8-Y6 X9-Y6'\n    'X0-Y7 X1-Y7 X2-Y7 X3-Y7 X4-Y7 X5-Y7 X6-Y7 X7-Y7 X8-Y7 X9-Y7'\n    'X0-Y8 X1-Y8 X2-Y8 X3-Y8 X4-Y8 X5-Y8 X6-Y8 X7-Y8 X8-Y8 X9-Y8'\n    'X0-Y9 X1-Y9 X2-Y9 X3-Y9 X4-Y9 X5-Y9 X6-Y9 X7-Y9 X8-Y9 X9-Y9';\n}\n\n.board-item.can-receive-ship {\n  background-color: rgba(0, 225, 0, 0.5);\n}\n\n.board-item.cannot-receive-ship {\n  background-color: rgba(225, 0, 0, 0.5);\n}\n\n.row-label {\n  grid-area: row-label;\n  display: grid;\n  grid-template-columns: repeat(10, var(--base-node-size));\n  font-size: 1.4rem;\n}\n\n.col-label {\n  grid-area: col-label;\n  display: grid;\n  grid-template-rows: repeat(10, var(--base-node-size));\n  font-size: 1.4rem;\n}\n\n.home-btn-container {\n  position: absolute;\n  top: 30px;\n  left: 30px;\n}\n\n.ship-yard {\n  margin-bottom: auto;\n  align-items: flex-start;\n  justify-content: space-around;\n}\n\n.ship-node {\n  background-color: #6565f5;\n  width: var(--base-node-size);\n  height: var(--base-node-size);\n  border-radius: 3px;\n}\n\n.ship[data-orientation='HORIZONTAL'] {\n  flex-direction: row;\n}\n\n.ship[data-orientation='VERTICAL'] {\n  flex-direction: column;\n}\n\n.btn-group .btn {\n  padding: 6px 10px;\n  font-size: 1.5rem;\n  /* text-transform: uppercase; */\n}\n\n.btn.rotate {\n  padding: 3px;\n}\n\n.ship.active .ship-node {\n  background-color: green;\n}\n\n.ship.place {\n  z-index: 2;\n}\n\n.ship.fail-place .ship-node {\n  background-color: red;\n}\n\n/* GAME SETUP PAGE ENDS */\n\n/* GAME PLAY PAGE START */\n\n.game-play-container {\n  text-align: center;\n}\n\n.human-player-section-container {\n  display: grid;\n  gap: 2rem;\n  grid-template-rows: 1fr 10px minmax(max-content, 100px);\n  max-width: 350px;\n  order: 2;\n  justify-items: center;\n  overflow: auto;\n}\n\n.bot-player-section-container {\n  display: grid;\n  gap: 2rem;\n  grid-template-rows: 1fr 10px minmax(max-content, 100px);\n  max-width: 350px;\n  justify-items: center;\n  overflow: auto;\n}\n\n.bot-player-section-container .ship.sunk .ship-node {\n  background-color: red;\n}\n\n.water-header {\n  font-size: 2.3rem;\n  text-align: center;\n  margin-bottom: 1rem;\n}\n\n.ship-yard-section-header {\n  font-size: 1.6rem;\n}\n\n.horizontal-divider-container {\n  display: grid;\n  width: 100%;\n}\n\n.vertical-divider-container {\n  display: none;\n  height: 100%;\n  justify-items: center;\n  grid-template-rows: 1fr 40px 1fr;\n  gap: 2rem;\n}\n\n.game-dashboard-container .vertical-divider-container {\n  display: grid;\n  grid-template-rows: 1fr;\n}\n\n.small-screen_divider {\n  display: grid;\n  grid-template-columns: 1fr 40px 1fr;\n  justify-content: center;\n  align-items: center;\n  justify-items: center;\n}\n\n.horizontal-divider {\n  height: 2px;\n  width: 100%;\n  background-color: red;\n}\n\n.vertical-divider {\n  width: 2px;\n  height: 100%;\n  background-color: red;\n}\n\n.turn-marker {\n  border: 2px solid green;\n  border-radius: 50%;\n  width: 20px;\n  height: 20px;\n  align-self: center;\n}\n\n.game-dashboard-container {\n  display: grid;\n  gap: 1rem;\n  align-items: center;\n  justify-items: center;\n  grid-template-columns: 2fr 10px 1fr;\n}\n\n.players-desc-container {\n  display: flex;\n  align-items: center;\n  gap: 1.5rem;\n  justify-content: center;\n}\n\n.board-item[data-has-ship='true'][data-mask='false'] {\n  background-color: blue;\n}\n\n.board .board-item[data-hit-status='1'],\n.board .board-item[data-hit-status='2'] {\n  background-color: red;\n}\n\n.board .board-item[data-hit-status='0'],\n.board .board-item[data-hit-status='3'] {\n  background-color: grey;\n}\n\n.game-controls {\n  display: flex;\n  gap: 1rem;\n}\n\n.turn-marker[data-turn-indicator='human'] {\n  border-color: green;\n  background-color: green;\n}\n\n.turn-marker[data-turn-indicator='bot'] {\n  border-color: red;\n  background-color: red;\n}\n\n.bot-ship-yard-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  padding: 1rem;\n  max-width: 200px;\n}\n\n.bot-ship-yard-container .ship-node {\n  width: 15px;\n  height: 15px;\n  background-color: grey;\n}\n\n.hidden_small {\n  display: none;\n}\n\n/* GAME PLAY PAGE ENDS */\n\n.settings-page {\n  min-height: 100%;\n}\n\n.settings-page .container {\n  min-height: 100%;\n}\n\n.settings-page h1 {\n  font-size: 3rem;\n}\n\n.settings-page h2 {\n  font-size: 1.8rem;\n}\n\n.settings-form .horizontal-divider-container {\n  display: flex;\n}\n\n.settings-form .horizontal-divider-container .horizontal-divider {\n  display: none;\n}\n\n.music-controls-container,\n.vibration-controls-container {\n  background-position: center;\n  background-repeat: no-repeat;\n}\n\n.volume-controls-container[data-volume='yes'] .btn.volume-mute-icon {\n  display: none;\n}\n\n.volume-controls-container[data-volume='no'] .btn.volume-high-icon {\n  display: none;\n}\n\n.vibrate-controls-container[data-vibrate='yes'] .btn.vibrate-off-icon {\n  display: none;\n}\n\n.vibrate-controls-container[data-vibrate='no'] .btn.vibrate-icon {\n  display: none;\n}\n\n.dialog-header {\n  font-size: 2.2rem;\n}\n\n.tutorial-container {\n  max-width: 600px;\n}\n\n@media (min-width: 768px) {\n  .settings-form .horizontal-divider-container .horizontal-divider {\n    display: block;\n  }\n\n  .settings-form .horizontal-divider:nth-of-type(1) {\n    width: 35%;\n  }\n\n  .settings-form .horizontal-divider:nth-of-type(2) {\n    width: 35%;\n  }\n\n  .settings-form h2 {\n    width: 30%;\n  }\n\n  .settings-modal h2 {\n    width: 100%;\n  }\n\n  .container {\n    width: 75%;\n  }\n}\n\n@media (min-width: 900px) {\n  html {\n    font-size: 12px;\n  }\n\n  dialog {\n    width: 60%;\n  }\n\n  :root {\n    --base-node-size: 30px;\n  }\n\n  .container {\n    width: 80%;\n  }\n\n  .hidden_mid {\n    display: none;\n  }\n\n  .icon_container {\n    width: 35px;\n  }\n\n  .row-label,\n  .col-label {\n    font-size: 2rem;\n  }\n\n  .btn-group {\n    padding: 12px 24px;\n    font-size: 2rem;\n  }\n\n  .game-setup .container {\n    flex-direction: row;\n  }\n\n  .game-play-container {\n    height: 100%;\n  }\n\n  .game-play-container .container {\n    flex-direction: row;\n  }\n\n  .game-play-container .vertical-divider-container {\n    display: grid;\n  }\n\n  .human-player-section-container {\n    order: initial;\n  }\n\n  .bot-ship-yard-container {\n    max-width: none;\n  }\n\n  .bot-ship-yard-container .ship-node {\n    width: 20px;\n    height: 20px;\n  }\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"*,\\n*::after,\\n*::before {\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\nhtml {\\n  box-sizing: inherit;\\n  height: 100%;\\n  font-size: 10px;\\n}\\n\\n:root {\\n  --base-node-size: 20px;\\n}\\n\\nbody {\\n  font-size: 1.6rem;\\n  line-height: 1.3;\\n  letter-spacing: 1.5px;\\n  height: 100%;\\n  text-transform: lowercase;\\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n}\\n\\ndialog {\\n  margin: auto;\\n  border: 2px inset black;\\n  min-width: 200px;\\n  min-height: 200px;\\n  width: 85%;\\n}\\n\\nbutton:active,\\nbutton:focus {\\n  outline: none;\\n}\\n\\nul {\\n  list-style: none;\\n}\\n\\n.z_index_1 {\\n  z-index: 1;\\n}\\n\\n.z_index_2 {\\n  z-index: 2;\\n}\\n\\n.z_index_3 {\\n  z-index: 3;\\n}\\n\\n.hidden {\\n  display: none;\\n}\\n\\n.icon_container {\\n  width: 2.5rem;\\n  height: 2.5rem;\\n  padding: 3px;\\n  box-sizing: initial;\\n}\\n\\n.cursor_pointer {\\n  cursor: pointer;\\n}\\n\\n.cursor_crosshair {\\n  cursor: crosshair;\\n}\\n\\n.img,\\nimg {\\n  width: 100%;\\n  max-width: 100%;\\n  height: 100%;\\n  max-height: 100%;\\n}\\n\\n.text-align__center {\\n  text-align: center;\\n}\\n\\n.text-transform__uppercase {\\n  text-transform: uppercase;\\n}\\n\\n.text-transform__capitalize {\\n  text-transform: capitalize;\\n}\\n\\n.text-transform__lowercase {\\n  text-transform: lowercase;\\n}\\n\\n.container {\\n  width: 100%;\\n  max-width: 1128px;\\n}\\n\\n.d-flex__row {\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.d-flex__col {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.flex-direction__col {\\n  flex-direction: column;\\n}\\n\\n.flex-direction__row {\\n  flex-direction: row;\\n}\\n\\n.justify-content__center {\\n  justify-content: center;\\n}\\n\\n.justify-content__space-around {\\n  justify-content: space-around;\\n}\\n.justify-content__space-between {\\n  justify-content: space-between;\\n}\\n\\n.align-items__center {\\n  align-items: center;\\n}\\n\\n.centered_flex {\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.gap_10 {\\n  gap: 10px;\\n}\\n\\n.gap_5 {\\n  gap: 5px;\\n}\\n\\n.gap_2 {\\n  gap: 2px;\\n}\\n\\n.gap_1r {\\n  gap: 1rem;\\n}\\n\\n.gap_2r {\\n  gap: 2rem;\\n}\\n\\n.d-flex {\\n  display: flex;\\n}\\n\\n.padding-top_10 {\\n  padding-top: 10px;\\n}\\n\\n.padding-bottom_10 {\\n  padding-bottom: 10px;\\n}\\n\\n.padding-left_10 {\\n  padding-left: 10px;\\n}\\n\\n.padding-right_10 {\\n  padding-right: 10px;\\n}\\n\\n.padding_10 {\\n  padding: 10px;\\n}\\n\\n.padding_2r {\\n  padding: 2rem;\\n}\\n\\n.btn {\\n  cursor: pointer;\\n  border: 1.5px solid black;\\n  outline: none;\\n}\\n\\n.btn:active,\\n.btn:hover {\\n  opacity: 0.5;\\n}\\n\\n.fz_2-4r {\\n  font-size: 2.4rem;\\n}\\n\\n.fz_2r {\\n  font-size: 2rem;\\n}\\n\\n.fz_1-8r {\\n  font-size: 1.8rem;\\n}\\n\\n/* LOADING SCREEN */\\n\\n.loading-title {\\n  text-align: center;\\n}\\n\\n.loading-title h1 {\\n  font-size: 1.5rem;\\n  letter-spacing: 2px;\\n}\\n\\n.loading-title h2 {\\n  font-size: 3.5rem;\\n  letter-spacing: 1.8px;\\n}\\n\\n.loading-screen {\\n  height: 100%;\\n  text-align: center;\\n}\\n\\n.loading-bar {\\n  height: auto;\\n  width: 100%;\\n}\\n\\n.loading-line {\\n  height: var(--base-node-size);\\n  border: 2px solid red;\\n  border-radius: 100px;\\n}\\n\\n.line {\\n  height: 100%;\\n  border-radius: 100px;\\n  background-color: red;\\n  animation-name: loading;\\n  animation-iteration-count: 1;\\n  animation-fill-mode: forwards;\\n  animation-duration: 2.5s;\\n  animation-delay: 200ms;\\n  animation-timing-function: cubic-bezier(0, 0, 0, 0);\\n  animation-direction: normal;\\n}\\n\\n.loading-screen.loading-complete .line {\\n  background-color: #6565f5;\\n}\\n\\n.loading-screen.loading-screen.loading-complete .loading-line {\\n  border-color: #6565f5;\\n}\\n\\n@keyframes loading {\\n  0% {\\n    width: 0%;\\n  }\\n\\n  100% {\\n    width: 100%;\\n  }\\n}\\n\\n.loading-text {\\n  font-size: 1.5rem;\\n  letter-spacing: 1.3px;\\n}\\n\\n.loader {\\n  display: inline-block;\\n  margin-left: 3px;\\n  width: 24px;\\n  aspect-ratio: 4;\\n  background: radial-gradient(circle closest-side, #000 90%, #0000) 0 /\\n    calc(100% / 3) 100% space;\\n  clip-path: inset(0 100% 0 0);\\n  animation: l1 1.5s steps(4) infinite;\\n}\\n\\n@keyframes l1 {\\n  to {\\n    clip-path: inset(0 -34% 0 0);\\n  }\\n}\\n\\n/* LOADING SCREEN ENDS */\\n\\n/* HOME PAGE */\\n.home-page {\\n  height: 100%;\\n}\\n\\n.home-page .btn {\\n  cursor: pointer;\\n}\\n\\n.home-page__btn-group {\\n  width: 50%;\\n  max-width: 200px;\\n}\\n\\n.home-page__btn-group .btn {\\n  padding: 12px 20px;\\n  font-size: 1.5rem;\\n}\\n\\n.tutorial-btn-container {\\n  position: absolute;\\n  top: 25px;\\n  left: 25px;\\n}\\n\\n.tutorial__btn {\\n  padding: 6px 14px;\\n  font-weight: bolder;\\n  font-size: 3rem;\\n}\\n/* HOME PAGE ENDS */\\n\\n/* GAME SETUP PAGE */\\n.game-setup {\\n  height: 100%;\\n  text-align: center;\\n}\\n\\n.game-setup .container {\\n  justify-content: center;\\n}\\n\\n.board {\\n  display: grid;\\n  grid-template-columns: var(--base-node-size) 1fr;\\n  grid-template-rows: var(--base-node-size) 1fr;\\n  grid-template-areas:\\n    '. row-label'\\n    'col-label board-items';\\n}\\n\\n.bot-player-board {\\n  grid-template-columns: 1fr var(--base-node-size);\\n  grid-template-areas:\\n    'row-label .'\\n    'board-items col-label';\\n}\\n\\n.board-item-container {\\n  grid-area: board-items;\\n  display: grid;\\n  grid-template-columns: repeat(10, var(--base-node-size));\\n  grid-template-rows: repeat(10, var(--base-node-size));\\n  grid-template-areas:\\n    'X0-Y0 X1-Y0 X2-Y0 X3-Y0 X4-Y0 X5-Y0 X6-Y0 X7-Y0 X8-Y0 X9-Y0'\\n    'X0-Y1 X1-Y1 X2-Y1 X3-Y1 X4-Y1 X5-Y1 X6-Y1 X7-Y1 X8-Y1 X9-Y1'\\n    'X0-Y2 X1-Y2 X2-Y2 X3-Y2 X4-Y2 X5-Y2 X6-Y2 X7-Y2 X8-Y2 X9-Y2'\\n    'X0-Y3 X1-Y3 X2-Y3 X3-Y3 X4-Y3 X5-Y3 X6-Y3 X7-Y3 X8-Y3 X9-Y3'\\n    'X0-Y4 X1-Y4 X2-Y4 X3-Y4 X4-Y4 X5-Y4 X6-Y4 X7-Y4 X8-Y4 X9-Y4'\\n    'X0-Y5 X1-Y5 X2-Y5 X3-Y5 X4-Y5 X5-Y5 X6-Y5 X7-Y5 X8-Y5 X9-Y5'\\n    'X0-Y6 X1-Y6 X2-Y6 X3-Y6 X4-Y6 X5-Y6 X6-Y6 X7-Y6 X8-Y6 X9-Y6'\\n    'X0-Y7 X1-Y7 X2-Y7 X3-Y7 X4-Y7 X5-Y7 X6-Y7 X7-Y7 X8-Y7 X9-Y7'\\n    'X0-Y8 X1-Y8 X2-Y8 X3-Y8 X4-Y8 X5-Y8 X6-Y8 X7-Y8 X8-Y8 X9-Y8'\\n    'X0-Y9 X1-Y9 X2-Y9 X3-Y9 X4-Y9 X5-Y9 X6-Y9 X7-Y9 X8-Y9 X9-Y9';\\n}\\n\\n.board-item.can-receive-ship {\\n  background-color: rgba(0, 225, 0, 0.5);\\n}\\n\\n.board-item.cannot-receive-ship {\\n  background-color: rgba(225, 0, 0, 0.5);\\n}\\n\\n.row-label {\\n  grid-area: row-label;\\n  display: grid;\\n  grid-template-columns: repeat(10, var(--base-node-size));\\n  font-size: 1.4rem;\\n}\\n\\n.col-label {\\n  grid-area: col-label;\\n  display: grid;\\n  grid-template-rows: repeat(10, var(--base-node-size));\\n  font-size: 1.4rem;\\n}\\n\\n.home-btn-container {\\n  position: absolute;\\n  top: 30px;\\n  left: 30px;\\n}\\n\\n.ship-yard {\\n  margin-bottom: auto;\\n  align-items: flex-start;\\n  justify-content: space-around;\\n}\\n\\n.ship-node {\\n  background-color: #6565f5;\\n  width: var(--base-node-size);\\n  height: var(--base-node-size);\\n  border-radius: 3px;\\n}\\n\\n.ship[data-orientation='HORIZONTAL'] {\\n  flex-direction: row;\\n}\\n\\n.ship[data-orientation='VERTICAL'] {\\n  flex-direction: column;\\n}\\n\\n.btn-group .btn {\\n  padding: 6px 10px;\\n  font-size: 1.5rem;\\n  /* text-transform: uppercase; */\\n}\\n\\n.btn.rotate {\\n  padding: 3px;\\n}\\n\\n.ship.active .ship-node {\\n  background-color: green;\\n}\\n\\n.ship.place {\\n  z-index: 2;\\n}\\n\\n.ship.fail-place .ship-node {\\n  background-color: red;\\n}\\n\\n/* GAME SETUP PAGE ENDS */\\n\\n/* GAME PLAY PAGE START */\\n\\n.game-play-container {\\n  text-align: center;\\n}\\n\\n.human-player-section-container {\\n  display: grid;\\n  gap: 2rem;\\n  grid-template-rows: 1fr 10px minmax(max-content, 100px);\\n  max-width: 350px;\\n  order: 2;\\n  justify-items: center;\\n  overflow: auto;\\n}\\n\\n.bot-player-section-container {\\n  display: grid;\\n  gap: 2rem;\\n  grid-template-rows: 1fr 10px minmax(max-content, 100px);\\n  max-width: 350px;\\n  justify-items: center;\\n  overflow: auto;\\n}\\n\\n.bot-player-section-container .ship.sunk .ship-node {\\n  background-color: red;\\n}\\n\\n.water-header {\\n  font-size: 2.3rem;\\n  text-align: center;\\n  margin-bottom: 1rem;\\n}\\n\\n.ship-yard-section-header {\\n  font-size: 1.6rem;\\n}\\n\\n.horizontal-divider-container {\\n  display: grid;\\n  width: 100%;\\n}\\n\\n.vertical-divider-container {\\n  display: none;\\n  height: 100%;\\n  justify-items: center;\\n  grid-template-rows: 1fr 40px 1fr;\\n  gap: 2rem;\\n}\\n\\n.game-dashboard-container .vertical-divider-container {\\n  display: grid;\\n  grid-template-rows: 1fr;\\n}\\n\\n.small-screen_divider {\\n  display: grid;\\n  grid-template-columns: 1fr 40px 1fr;\\n  justify-content: center;\\n  align-items: center;\\n  justify-items: center;\\n}\\n\\n.horizontal-divider {\\n  height: 2px;\\n  width: 100%;\\n  background-color: red;\\n}\\n\\n.vertical-divider {\\n  width: 2px;\\n  height: 100%;\\n  background-color: red;\\n}\\n\\n.turn-marker {\\n  border: 2px solid green;\\n  border-radius: 50%;\\n  width: 20px;\\n  height: 20px;\\n  align-self: center;\\n}\\n\\n.game-dashboard-container {\\n  display: grid;\\n  gap: 1rem;\\n  align-items: center;\\n  justify-items: center;\\n  grid-template-columns: 2fr 10px 1fr;\\n}\\n\\n.players-desc-container {\\n  display: flex;\\n  align-items: center;\\n  gap: 1.5rem;\\n  justify-content: center;\\n}\\n\\n.board-item[data-has-ship='true'][data-mask='false'] {\\n  background-color: blue;\\n}\\n\\n.board .board-item[data-hit-status='1'],\\n.board .board-item[data-hit-status='2'] {\\n  background-color: red;\\n}\\n\\n.board .board-item[data-hit-status='0'],\\n.board .board-item[data-hit-status='3'] {\\n  background-color: grey;\\n}\\n\\n.game-controls {\\n  display: flex;\\n  gap: 1rem;\\n}\\n\\n.turn-marker[data-turn-indicator='human'] {\\n  border-color: green;\\n  background-color: green;\\n}\\n\\n.turn-marker[data-turn-indicator='bot'] {\\n  border-color: red;\\n  background-color: red;\\n}\\n\\n.bot-ship-yard-container {\\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 1rem;\\n  padding: 1rem;\\n  max-width: 200px;\\n}\\n\\n.bot-ship-yard-container .ship-node {\\n  width: 15px;\\n  height: 15px;\\n  background-color: grey;\\n}\\n\\n.hidden_small {\\n  display: none;\\n}\\n\\n/* GAME PLAY PAGE ENDS */\\n\\n.settings-page {\\n  min-height: 100%;\\n}\\n\\n.settings-page .container {\\n  min-height: 100%;\\n}\\n\\n.settings-page h1 {\\n  font-size: 3rem;\\n}\\n\\n.settings-page h2 {\\n  font-size: 1.8rem;\\n}\\n\\n.settings-form .horizontal-divider-container {\\n  display: flex;\\n}\\n\\n.settings-form .horizontal-divider-container .horizontal-divider {\\n  display: none;\\n}\\n\\n.music-controls-container,\\n.vibration-controls-container {\\n  background-position: center;\\n  background-repeat: no-repeat;\\n}\\n\\n.volume-controls-container[data-volume='yes'] .btn.volume-mute-icon {\\n  display: none;\\n}\\n\\n.volume-controls-container[data-volume='no'] .btn.volume-high-icon {\\n  display: none;\\n}\\n\\n.vibrate-controls-container[data-vibrate='yes'] .btn.vibrate-off-icon {\\n  display: none;\\n}\\n\\n.vibrate-controls-container[data-vibrate='no'] .btn.vibrate-icon {\\n  display: none;\\n}\\n\\n.dialog-header {\\n  font-size: 2.2rem;\\n}\\n\\n.tutorial-container {\\n  max-width: 600px;\\n}\\n\\n@media (min-width: 768px) {\\n  .settings-form .horizontal-divider-container .horizontal-divider {\\n    display: block;\\n  }\\n\\n  .settings-form .horizontal-divider:nth-of-type(1) {\\n    width: 35%;\\n  }\\n\\n  .settings-form .horizontal-divider:nth-of-type(2) {\\n    width: 35%;\\n  }\\n\\n  .settings-form h2 {\\n    width: 30%;\\n  }\\n\\n  .settings-modal h2 {\\n    width: 100%;\\n  }\\n\\n  .container {\\n    width: 75%;\\n  }\\n}\\n\\n@media (min-width: 900px) {\\n  html {\\n    font-size: 12px;\\n  }\\n\\n  dialog {\\n    width: 60%;\\n  }\\n\\n  :root {\\n    --base-node-size: 30px;\\n  }\\n\\n  .container {\\n    width: 80%;\\n  }\\n\\n  .hidden_mid {\\n    display: none;\\n  }\\n\\n  .icon_container {\\n    width: 35px;\\n  }\\n\\n  .row-label,\\n  .col-label {\\n    font-size: 2rem;\\n  }\\n\\n  .btn-group {\\n    padding: 12px 24px;\\n    font-size: 2rem;\\n  }\\n\\n  .game-setup .container {\\n    flex-direction: row;\\n  }\\n\\n  .game-play-container {\\n    height: 100%;\\n  }\\n\\n  .game-play-container .container {\\n    flex-direction: row;\\n  }\\n\\n  .game-play-container .vertical-divider-container {\\n    display: grid;\\n  }\\n\\n  .human-player-section-container {\\n    order: initial;\\n  }\\n\\n  .bot-ship-yard-container {\\n    max-width: none;\\n  }\\n\\n  .bot-ship-yard-container .ship-node {\\n    width: 20px;\\n    height: 20px;\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export default function createElementWithClass(element, classNames) {\n  const ELEMENT = document.createElement(element);\n\n  if (classNames && classNames.length !== 0) {\n    classNames.forEach((className) => {\n      if (className) {\n        ELEMENT.classList.add(className);\n      }\n    });\n  }\n\n  return ELEMENT;\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.nc = undefined;","export default function transform(x, y, base) {\n  const index = y * base + x;\n  return index;\n}\n\nexport function reverseTransform(index, base) {\n  const y = Math.floor(index / base);\n  const x = index % base;\n  return [x, y];\n}\n","const BOARD_AREA = 100;\nconst BOARD_X_SIZE = 10;\nconst BOARD_Y_SIZE = 10;\n\nfunction isValidGameBoardCoordinate(x, y) {\n  return x >= 0 && x < BOARD_X_SIZE && y >= 0 && y < BOARD_Y_SIZE;\n}\n\nconst BOARD_SPECS = {\n  BOARD_AREA,\n  BOARD_X_SIZE,\n  BOARD_Y_SIZE,\n};\n\nexport default {\n  BOARD_SPECS,\n  isValidGameBoardCoordinate,\n};\n","import createElementWithClass from '../helper_module/create-element-with-class.js';\nimport { reverseTransform } from '../helper_module/number-transform.js';\nimport GAME_SETTINGS from '../GAME_SETTINGS/game-settings.js';\n\nimport ACCOUNT_ICON_SRC from '../images/account.svg';\nimport ROBOT_ICON_SRC from '../images/robot.svg';\n// import SETTINGS_ICON_SRC from '../images/cog.svg';\nimport HOME_ICON_SRC from '../images/home.svg';\n\nconst { BOARD_SPECS } = GAME_SETTINGS;\nconst { BOARD_X_SIZE } = BOARD_SPECS;\n\nconst shipsDetails = [\n  {\n    classNames: ['ship', 'z_index_2', 'd-flex', 'battleship', 'gap_2'],\n    shipSize: 4,\n    orientation: 'horizontal',\n    sunk: false,\n    name: 'battleship',\n  },\n\n  {\n    classNames: ['ship', 'z_index_2', 'd-flex', 'gap_2', 'destroyer'],\n    shipSize: 3,\n    orientation: 'horizontal',\n    sunk: false,\n    name: 'destroyer',\n  },\n  {\n    classNames: ['ship', 'z_index_2', 'd-flex', 'patrol_boat', 'gap_2'],\n    shipSize: 2,\n    orientation: 'horizontal',\n    sunk: false,\n    name: 'patrol_boat',\n  },\n\n  {\n    classNames: ['ship', 'z_index_2', 'd-flex', 'submarine', 'gap_2'],\n    shipSize: 3,\n    orientation: 'horizontal',\n    sunk: false,\n    name: 'submarine',\n  },\n\n  {\n    classNames: ['ship', 'z_index_2', 'd-flex', 'gap_2', 'carrier'],\n    shipSize: 5,\n    orientation: 'horizontal',\n    sunk: false,\n    name: 'carrier',\n  },\n];\n\nfunction buildPlayerStructure({\n  boardNodesContainer,\n  rowLabelContainer,\n  colLabelContainer,\n  boardNodeClassNames,\n}) {\n  for (let i = 0; i < BOARD_X_SIZE * BOARD_X_SIZE; i += 1) {\n    const boardNode = createElementWithClass('button', boardNodeClassNames);\n    const [x, y] = reverseTransform(i, BOARD_X_SIZE);\n    boardNode.dataset.x = x;\n    boardNode.dataset.y = y;\n    boardNode.dataset.hasShip = false;\n    boardNode.dataset.mask = false;\n    boardNode.dataset.hitStatus = -1;\n    boardNode.style.gridArea = `X${x}-Y${y}`;\n\n    boardNodesContainer.appendChild(boardNode);\n  }\n\n  for (let i = 0; i < BOARD_X_SIZE; i += 1) {\n    const colLabelItem = document.createElement('div');\n    const rowLabelItem = document.createElement('div');\n\n    rowLabelItem.classList.add('label-item', 'centered_flex', 'd-flex-row');\n    colLabelItem.classList.add('label-item', 'centered_flex', 'd-flex-col');\n\n    const rowTextContent = String.fromCharCode(i + 65);\n    const colTextContent = `${i + 1}`;\n\n    rowLabelItem.textContent = rowTextContent;\n    colLabelItem.textContent = colTextContent;\n\n    rowLabelContainer.appendChild(rowLabelItem);\n    colLabelContainer.appendChild(colLabelItem);\n  }\n}\n\nexport default function createGamePlayPage() {\n  const gamePlayContainer = createElementWithClass('div', [\n    'game-play-container',\n    'd-flex__col',\n    'centered_flex',\n    'text-align__center',\n  ]);\n\n  const genericContainer = createElementWithClass('div', [\n    'container',\n    'centered_flex',\n    'd-flex__col',\n    'gap_2r',\n    'padding_2r',\n  ]);\n\n  const humanPlayerSecContainer = createElementWithClass('div', [\n    'human-player-section-container',\n  ]);\n\n  const verticalDividerContainer = createElementWithClass('div', [\n    'vertical-divider-container',\n  ]);\n\n  const botPlayerSecContainer = createElementWithClass('div', [\n    'bot-player-section-container',\n  ]);\n\n  const smallScreenDivider = createElementWithClass('div', [\n    'hidden_mid',\n    'small-screen_divider',\n    'horizontal-divider-container',\n  ]);\n\n  const verticalDivider1 = createElementWithClass('div', ['vertical-divider']);\n  const turnMarkerEl = createElementWithClass('div', ['turn-marker']);\n  turnMarkerEl.dataset.turnIndicator = 'human';\n  const verticalDivider2 = createElementWithClass('div', ['vertical-divider']);\n\n  const horizontalDivider1 = createElementWithClass('div', [\n    'horizontal-divider',\n  ]);\n  const turnMarkerEl2 = createElementWithClass('div', ['turn-marker']);\n  turnMarkerEl.dataset.turnIndicator = 'human';\n  const horizontalDivider2 = createElementWithClass('div', [\n    'horizontal-divider',\n  ]);\n\n  const genericDiv = createElementWithClass('div');\n\n  const humanWaterHeader = createElementWithClass('h1', [\n    'water-header',\n    'text-transform__lowercase',\n  ]);\n\n  humanWaterHeader.textContent = 'Your Waters';\n\n  const humanPlayerBoard = createElementWithClass('div', [\n    'board',\n    'human-player-board',\n  ]);\n\n  const humanRowLabel = createElementWithClass('div', [\n    'row-label',\n    'gap_2',\n    'centered_flex',\n    'text-transform__uppercase',\n  ]);\n\n  const humanColLabel = createElementWithClass('div', [\n    'col-label',\n    'gap_2',\n    'centered_flex',\n    'text-transform__uppercase',\n  ]);\n\n  const humanBoardNodesContainer = createElementWithClass('div', [\n    'board-item-container',\n    'gap_2',\n  ]);\n\n  humanPlayerBoard.appendChild(humanRowLabel);\n  humanPlayerBoard.appendChild(humanColLabel);\n  humanPlayerBoard.appendChild(humanBoardNodesContainer);\n\n  genericDiv.appendChild(humanWaterHeader);\n  genericDiv.appendChild(humanPlayerBoard);\n\n  const horizontalDividerContainer1 = createElementWithClass('div', [\n    'horizontal-divider-container',\n  ]);\n\n  const horizontalDivider3 = createElementWithClass('div', [\n    'horizontal-divider',\n  ]);\n\n  horizontalDividerContainer1.appendChild(horizontalDivider3);\n\n  const genericDiv2 = createElementWithClass('div', [\n    'd-flex',\n    'align-items__center',\n    'justify-content__center',\n  ]);\n\n  const gameDashBoardContainer = createElementWithClass('div', [\n    'game-dashboard-container',\n  ]);\n\n  const playerDescContainer = createElementWithClass('div', [\n    'players-desc-container',\n  ]);\n\n  const accountIconContainer = createElementWithClass('button', [\n    'icon_container',\n    'btn',\n  ]);\n\n  const accountIconImg = createElementWithClass('img', ['img']);\n  accountIconImg.src = ACCOUNT_ICON_SRC;\n  accountIconImg.alt = '';\n\n  accountIconContainer.appendChild(accountIconImg);\n\n  const pTag1 = createElementWithClass('p', ['text-transform__lowercase']);\n  pTag1.textContent = 'vs';\n\n  const robotIconContainer = createElementWithClass('button', [\n    'btn',\n    'icon_container',\n  ]);\n\n  const robotIconImg = createElementWithClass('img', ['img']);\n  robotIconImg.src = ROBOT_ICON_SRC;\n  robotIconImg.alt = '';\n\n  robotIconContainer.appendChild(robotIconImg);\n\n  const verticalDividerContainer2 = createElementWithClass('div', [\n    'vertical-divider-container',\n  ]);\n\n  const verticalDivider3 = createElementWithClass('div', ['vertical-divider']);\n\n  const gameControlsContainer = createElementWithClass('div', [\n    'game-controls',\n    'btn-group-container',\n  ]);\n\n  // const settingsIconContainer = createElementWithClass('button', [\n  //   'btn',\n  //   'settings-btn',\n  //   'icon_container',\n  //   'cursor_pointer',\n  // ]);\n\n  // const settingsIconImg = createElementWithClass('img', ['img']);\n\n  // settingsIconImg.src = SETTINGS_ICON_SRC;\n  // settingsIconImg.alt = '';\n\n  const homeIconContainer = createElementWithClass('button', [\n    'btn',\n    'home-btn',\n    'icon_container',\n    'cursor_pointer',\n  ]);\n\n  const homeIconImg = createElementWithClass('img', ['img']);\n\n  homeIconImg.src = HOME_ICON_SRC;\n  homeIconImg.alt = '';\n\n  const genericDiv3 = createElementWithClass('div');\n\n  const botWaterHeader = createElementWithClass('h1', ['water-header']);\n\n  botWaterHeader.textContent = 'enemy waters';\n\n  const botPlayerBoard = createElementWithClass('div', [\n    'board',\n    'bot-player-board',\n  ]);\n\n  const botRowLabelEl = createElementWithClass('div', [\n    'row-label',\n    'gap_2',\n    'centered_flex',\n    'text-transform__uppercase',\n  ]);\n\n  const botColLabelEl = createElementWithClass('div', [\n    'col-label',\n    'gap_2',\n    'centered_flex',\n    'text-transform__uppercase',\n  ]);\n\n  const botBoardNodesContainer = createElementWithClass('div', [\n    'board-item-container',\n    'gap_2',\n  ]);\n\n  const horizontalDividerContainer2 = createElementWithClass('div', [\n    'horizontal-divider-container',\n  ]);\n\n  const horizontalDivider4 = createElementWithClass('div', [\n    'horizontal-divider',\n  ]);\n\n  const genericDiv4 = createElementWithClass('div', [\n    'd-flex__col',\n    'justify-content__center',\n    'align-items__center',\n  ]);\n\n  const shipYardSecHeader = createElementWithClass('h2', [\n    'ship-yard-section-header',\n  ]);\n\n  shipYardSecHeader.textContent = 'enemy shipyard';\n\n  const shipYardContainer = createElementWithClass('div', [\n    'bot-ship-yard-container',\n    'd-flex__row',\n    'justify-content__center',\n  ]);\n\n  botPlayerBoard.appendChild(botRowLabelEl);\n  botPlayerBoard.appendChild(botColLabelEl);\n  botPlayerBoard.appendChild(botBoardNodesContainer);\n\n  genericDiv3.appendChild(botWaterHeader);\n  genericDiv3.appendChild(botPlayerBoard);\n\n  genericDiv4.appendChild(shipYardSecHeader);\n  genericDiv4.appendChild(shipYardContainer);\n\n  horizontalDividerContainer2.appendChild(horizontalDivider4);\n\n  homeIconContainer.appendChild(homeIconImg);\n  // settingsIconContainer.appendChild(settingsIconImg);\n\n  // gameControlsContainer.appendChild(settingsIconContainer);\n  gameControlsContainer.appendChild(homeIconContainer);\n\n  verticalDividerContainer2.appendChild(verticalDivider3);\n\n  playerDescContainer.appendChild(accountIconContainer);\n  playerDescContainer.appendChild(pTag1);\n  playerDescContainer.appendChild(robotIconContainer);\n\n  gameDashBoardContainer.appendChild(playerDescContainer);\n  gameDashBoardContainer.appendChild(verticalDividerContainer2);\n  gameDashBoardContainer.appendChild(gameControlsContainer);\n\n  genericDiv2.appendChild(gameDashBoardContainer);\n\n  humanPlayerSecContainer.appendChild(genericDiv);\n  humanPlayerSecContainer.appendChild(horizontalDividerContainer1);\n  humanPlayerSecContainer.appendChild(genericDiv2);\n\n  verticalDividerContainer.appendChild(verticalDivider1);\n  verticalDividerContainer.appendChild(turnMarkerEl);\n  verticalDividerContainer.appendChild(verticalDivider2);\n\n  smallScreenDivider.appendChild(horizontalDivider1);\n  smallScreenDivider.appendChild(turnMarkerEl2);\n  smallScreenDivider.appendChild(horizontalDivider2);\n\n  botPlayerSecContainer.appendChild(genericDiv3);\n  botPlayerSecContainer.appendChild(horizontalDividerContainer2);\n  botPlayerSecContainer.appendChild(genericDiv4);\n\n  genericContainer.appendChild(humanPlayerSecContainer);\n  genericContainer.appendChild(verticalDividerContainer);\n  genericContainer.appendChild(botPlayerSecContainer);\n  genericContainer.appendChild(smallScreenDivider);\n\n  gamePlayContainer.appendChild(genericContainer);\n\n  const humanPlayerStructure = {\n    boardNodesContainer: humanBoardNodesContainer,\n    rowLabelContainer: humanRowLabel,\n    colLabelContainer: humanColLabel,\n    playerBoard: humanPlayerBoard,\n    boardClassName: '.human-player-board',\n    boardNodeClassNames: ['board-item'],\n  };\n\n  const botPlayerStructure = {\n    boardNodesContainer: botBoardNodesContainer,\n    rowLabelContainer: botRowLabelEl,\n    colLabelContainer: botColLabelEl,\n    playerBoard: botPlayerBoard,\n    boardClassName: '.bot-player-board',\n    botShipYard: shipYardContainer,\n    boardNodeClassNames: ['board-item', 'cursor_crosshair'],\n  };\n\n  buildPlayerStructure(humanPlayerStructure);\n  buildPlayerStructure(botPlayerStructure);\n\n  shipsDetails.forEach((shipDetails) => {\n    const { classNames, orientation, sunk, shipSize, name } = shipDetails;\n\n    const shipContainer = document.createElement('div');\n    shipContainer.classList.add(...classNames);\n    shipContainer.dataset.sunk = sunk;\n    shipContainer.dataset.orientation = orientation;\n    shipContainer.dataset.name = name;\n    shipContainer.dataset.shipSize = shipSize;\n\n    for (let i = 0; i < shipSize; i += 1) {\n      const shipNode = document.createElement('div');\n      shipNode.classList.add('ship-node');\n      shipContainer.appendChild(shipNode);\n    }\n\n    shipYardContainer.appendChild(shipContainer);\n  });\n\n  const turnMarkers = [turnMarkerEl, turnMarkerEl2];\n\n  return {\n    gamePlayContainer,\n    turnMarkers,\n    botPlayerStructure,\n    humanPlayerStructure,\n    homeIconContainer,\n  };\n}\n","export default class Ship {\n  #size;\n\n  #hitsCount = 0;\n\n  #name = '';\n\n  #orientation = '';\n\n  #placeHead = {\n    x: null,\n    y: null,\n  };\n\n  static isValidLength(length) {\n    return length > 0;\n  }\n\n  static isValidOrientation(orientation) {\n    const regExp = /^(horizontal|vertical)$/i;\n    return (\n      typeof orientation === 'string' &&\n      orientation.trim() !== '' &&\n      regExp.test(orientation)\n    );\n  }\n\n  constructor(length, name) {\n    if (!Ship.isValidLength(length)) {\n      throw new Error('Invalid length. 1 is minimum ship length');\n    }\n\n    this.#size = length;\n    this.#name = name;\n  }\n\n  #HasPlaceOrigin() {\n    const { x, y } = this.#placeHead;\n\n    return x !== null && y !== null;\n  }\n\n  hit() {\n    if (this.isSunk()) return -1;\n\n    this.#hitsCount += 1;\n    if (this.isSunk()) {\n      return 2;\n    }\n\n    return 1;\n  }\n\n  get name() {\n    return this.#name;\n  }\n\n  get hitsCount() {\n    return this.#hitsCount;\n  }\n\n  get size() {\n    return this.#size;\n  }\n\n  get shipInfo() {\n    const hasPlaceOrigin = this.#HasPlaceOrigin();\n    const orientation = this.assignedOrientation;\n    const { size, name } = this;\n    const sunk = this.isSunk();\n\n    return {\n      hasPlaceOrigin,\n      orientation,\n      size,\n      name,\n      sunk,\n    };\n  }\n\n  isSunk() {\n    return this.#hitsCount === this.#size;\n  }\n\n  /**\n   * Specifies the ship origin (x, y)\n   * @param {number} x - The x-coordinate of the Ship\n   * @param {number} y - The y-coordinate of the Ship\n   * @throws {Error} Will throw if x or y is negative or non-numeric\n   */\n  assignPlaceOrigin(x, y) {\n    if (typeof x !== 'number' || x < 0) {\n      throw new Error(\n        'Invalid x-coordinate: x coordinate must be greater than or equal to 0',\n      );\n    }\n\n    if (typeof y !== 'number' || y < 0) {\n      throw new Error(\n        'Invalid y-coordinate: y coordinate must be greater than or equal to 0',\n      );\n    }\n\n    if (this.#HasPlaceOrigin()) {\n      throw new Error(\n        'Ship Placed by a previous call: Remove ship before replacing at new origin',\n      );\n    }\n\n    this.#placeHead.x = x;\n    this.#placeHead.y = y;\n  }\n\n  removeAssignedPlaceOrigin() {\n    if (this.#HasPlaceOrigin) {\n      this.#placeHead.x = null;\n      this.#placeHead.y = null;\n    }\n  }\n\n  get assignedPlaceOrigin() {\n    const { x, y } = this.#placeHead;\n\n    return {\n      x,\n      y,\n    };\n  }\n\n  /**\n   * Assigns orientation to ship (HORIZONTAL/VERTICAL)\n   * @param {string} orientation - The orientation ship is to take\n   * @throws {Error} will throw an exception if orientation is invalid\n   */\n  assignOrientation(orientation) {\n    if (!Ship.isValidOrientation(orientation)) {\n      throw new Error(\n        'Invalid Orientation: Expects valid string with value (HORIZONTAL/VERTICAL)',\n      );\n    }\n\n    this.#orientation = orientation.toUpperCase();\n  }\n\n  removeAssignedOrientation() {\n    this.#orientation = '';\n  }\n\n  get assignedOrientation() {\n    return this.#orientation;\n  }\n}\n","import Ship from './ship.js';\n\nexport default class Node {\n  /**\n   * Creates an instance of Node.\n   * @param {number} x - The x-coordinate of the node.\n   * @param {number} y - The y-coordinate of the node.\n   * @throws {Error} Will throw an error if x or y are negative.\n   */\n\n  #occupant = null;\n\n  #isHit = false;\n\n  #neighbors = [];\n\n  constructor(x, y) {\n    if (x < 0 || y < 0) {\n      throw new Error('Coordinates must be non-negative integers.');\n    }\n    this.address = [x, y];\n  }\n\n  /**\n   * Adds a neighbor to the node.\n   * @param {Node} neighbor - The neighboring node to add.\n   */\n  addNeighbor(neighbor) {\n    if (neighbor instanceof Node) {\n      this.#neighbors.push(neighbor);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns neighbors attached to node.\n   */\n  get neighbors() {\n    return this.#neighbors;\n  }\n\n  /**\n   * Hits the node, marking it as hit.\n   */\n  hit() {\n    if (this.isHit) return -1;\n\n    this.#isHit = true;\n\n    if (this.isNeighboringSunk) return 3;\n\n    if (!this.isOccupied) return 0;\n\n    return this.#occupant.hit();\n  }\n\n  /**\n   * Sets the node as occupied.\n   */\n  occupy(ship) {\n    if (this.isOccupied) return false;\n\n    if (ship instanceof Ship) {\n      this.#occupant = ship;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns the current occupant\n   */\n  get occupant() {\n    return this.#occupant;\n  }\n\n  get isOccupied() {\n    return this.#occupant !== null;\n  }\n\n  get isNeighboringOccupied() {\n    if (this.#neighbors.length === 0) return false;\n\n    const noOccupiedNeighbor = this.#neighbors.every(\n      (neighbor) => !neighbor.isOccupied,\n    );\n\n    return !noOccupiedNeighbor;\n  }\n\n  get isNeighboringSunk() {\n    if (this.#neighbors.length === 0) return false;\n\n    const notNeighboringSunk = this.#neighbors.every(\n      (neighbor) => !neighbor.occupantShipSunk,\n    );\n\n    return !notNeighboringSunk;\n  }\n\n  get isHit() {\n    return this.#isHit;\n  }\n\n  get occupantShipSunk() {\n    if (this.isOccupied) {\n      return this.#occupant.isSunk();\n    }\n\n    return false;\n  }\n\n  removeOccupant() {\n    this.#occupant = null;\n  }\n}\n","import Ship from './ship.js';\n\nexport default class Carrier extends Ship {\n  constructor() {\n    super(5, 'carrier');\n  }\n}\n","import Ship from './ship.js';\n\nexport default class Destroyer extends Ship {\n  constructor() {\n    super(3, 'destroyer');\n  }\n}\n","import Ship from './ship.js';\n\nexport default class Submarine extends Ship {\n  constructor() {\n    super(3, 'submarine');\n  }\n}\n","import Ship from './ship.js';\n\nexport default class BattleShip extends Ship {\n  constructor() {\n    super(4, 'battleship');\n  }\n}\n","import Ship from './ship.js';\n\nexport default class PatrolBoat extends Ship {\n  constructor() {\n    super(2, 'patrol_boat');\n  }\n}\n","export function isPositiveNumber(number, zeroPositive = false) {\n  if (typeof number !== 'number') return false;\n\n  if (zeroPositive) {\n    return number >= 0;\n  }\n\n  return number > 0;\n}\n","export default function getRndElement(array) {\n  const rnd = Math.floor(Math.random() * array.length);\n  const element = array[rnd];\n\n  return {\n    element,\n    index: rnd,\n  };\n}\n","import Node from './board-node.js';\n\nimport GAME_SETTINGS from './GAME_SETTINGS/game-settings.js';\n\nimport Carrier from './carrier.js';\nimport Destroyer from './destroyer.js';\nimport Submarine from './submarine.js';\nimport BattleShip from './battleship.js';\nimport PatrolBoat from './patrol-boat.js';\n\nimport Ship from './ship.js';\n\nimport transform, {\n  reverseTransform,\n} from './helper_module/number-transform.js';\nimport { isPositiveNumber } from './helper_module/number.js';\nimport getRndElement from './helper_module/rnd-array-element.js';\n\nconst { BOARD_SPECS } = GAME_SETTINGS;\nconst { BOARD_AREA, BOARD_X_SIZE, BOARD_Y_SIZE } = BOARD_SPECS;\n\nexport default class GameBoard {\n  /**\n   * Creates an instance of GameBoard.\n   * Allows access to an array of Nodes\n   */\n\n  static BOARD_SIZE = BOARD_AREA;\n\n  static BOARD_X_Y = [BOARD_X_SIZE, BOARD_Y_SIZE];\n\n  #NODES = [];\n\n  #CARRIER = null;\n\n  #BATTLESHIP = null;\n\n  #DESTROYER = null;\n\n  #SUBMARINE = null;\n\n  #PATROL_BOAT = null;\n\n  constructor() {\n    this.#initializeNodes();\n    this.#initializeShips();\n  }\n\n  #initializeShips() {\n    this.#CARRIER = new Carrier();\n    this.#BATTLESHIP = new BattleShip();\n    this.#DESTROYER = new Destroyer();\n    this.#SUBMARINE = new Submarine();\n    this.#PATROL_BOAT = new PatrolBoat();\n  }\n\n  /**\n   * Initializes array of node\n   * node is a Node Class\n   */\n  #initializeNodes() {\n    for (let i = 0; i < GameBoard.BOARD_SIZE; i += 1) {\n      const [BOARD_X] = GameBoard.BOARD_X_Y;\n      const [x, y] = reverseTransform(i, BOARD_X);\n      const index = transform(x, y, BOARD_X);\n      const node = new Node(x, y);\n\n      this.#NODES[index] = node;\n    }\n\n    this.#NODES.forEach((node) => {\n      this.#assignNeighbors(node);\n    });\n  }\n\n  #assignNeighbors(node) {\n    const { address } = node;\n    const [x, y] = address;\n\n    const neighbors = [\n      [x, y - 1],\n      [x + 1, y - 1],\n      [x + 1, y],\n      [x + 1, y + 1],\n      [x, y + 1],\n      [x - 1, y + 1],\n      [x - 1, y],\n      [x - 1, y - 1],\n    ];\n\n    neighbors.forEach((neighbor) => {\n      const [nx, ny] = neighbor;\n      if (GameBoard.isValidBoardCoordinate(nx, ny)) {\n        const [BOARD_X] = GameBoard.BOARD_X_Y;\n        const index = transform(nx, ny, BOARD_X);\n        const nodeNeighbor = this.#NODES[index];\n        node.addNeighbor(nodeNeighbor);\n      }\n    });\n  }\n\n  static createCopy(BOARD) {\n    if (!(BOARD instanceof GameBoard)) {\n      throw new Error('Invalid argument: expected an instance of GameBoard');\n    }\n\n    const copy = new GameBoard();\n\n    // Replicate ship placements based on original board state\n    const {\n      carrierInfo,\n      battleShipInfo,\n      destroyerInfo,\n      submarineInfo,\n      patrolBoatInfo,\n    } = BOARD;\n\n    if (carrierInfo.isOnBoard) {\n      const { placeHead, orientation } = carrierInfo;\n      const [x, y] = placeHead;\n      copy.placeCarrier(x, y, orientation);\n    }\n\n    if (battleShipInfo.isOnBoard) {\n      const { placeHead, orientation } = battleShipInfo;\n      const [x, y] = placeHead;\n      copy.placeBattleShip(x, y, orientation);\n    }\n\n    if (destroyerInfo.isOnBoard) {\n      const { placeHead, orientation } = destroyerInfo;\n      const [x, y] = placeHead;\n      copy.placeDestroyer(x, y, orientation);\n    }\n\n    if (submarineInfo.isOnBoard) {\n      const { placeHead, orientation } = submarineInfo;\n      const [x, y] = placeHead;\n      copy.placeSubmarine(x, y, orientation);\n    }\n\n    if (patrolBoatInfo.isOnBoard) {\n      const { placeHead, orientation } = patrolBoatInfo;\n      const [x, y] = placeHead;\n      copy.placePatrolBoat(x, y, orientation);\n    }\n\n    // Replicate attack states if all ships are on the board\n    if (BOARD.allShipsOnBoard) {\n      BOARD.hitCoordinates.forEach(([x, y]) => {\n        copy.receiveAttack(x, y);\n      });\n    }\n\n    return copy;\n  }\n\n  static formatShipInfo(SHIP) {\n    if (!(SHIP instanceof Ship)) return null;\n\n    const { sunk, hasPlaceOrigin, orientation, size, name } = SHIP.shipInfo;\n\n    const { x, y } = SHIP.assignedPlaceOrigin;\n\n    return {\n      isOnBoard: hasPlaceOrigin,\n      orientation,\n      placeHead: [x, y],\n      size,\n      name,\n      isSunk: sunk,\n    };\n  }\n\n  static isValidBoardCoordinate(x, y) {\n    if (!isPositiveNumber(x, true) || !isPositiveNumber(y, true)) return false;\n\n    const [boardXSize, boardYSize] = GameBoard.BOARD_X_Y;\n\n    return x < boardXSize && y < boardYSize;\n  }\n\n  static getToBeOccupied(size, x, y, orientation) {\n    if (\n      !Ship.isValidOrientation(orientation) ||\n      !GameBoard.isValidBoardCoordinate(x, y)\n    ) {\n      return [];\n    }\n\n    const horizontalOrientationRegExp = /^(horizontal)$/i;\n    const verticalOrientationRegExp = /^(vertical)$/i;\n\n    const toBeOccupied = [[x, y]];\n\n    if (verticalOrientationRegExp.test(orientation)) {\n      for (let i = 0; i < size - 1; i += 1) {\n        const occupied = y + i + 1;\n        if (GameBoard.isValidBoardCoordinate(x, occupied)) {\n          toBeOccupied.push([x, occupied]);\n        }\n      }\n    } else if (horizontalOrientationRegExp.test(orientation)) {\n      for (let i = 0; i < size - 1; i += 1) {\n        const occupied = x + i + 1;\n        if (GameBoard.isValidBoardCoordinate(occupied, y)) {\n          toBeOccupied.push([occupied, y]);\n        }\n      }\n    }\n\n    return toBeOccupied;\n  }\n\n  static getNeighboringLoc(size, x, y, orientation) {\n    const BASE = GAME_SETTINGS.BOARD_SPECS.BOARD_X_SIZE;\n\n    const temp = GameBoard.getToBeOccupied(size, x, y, orientation).map(\n      (loc) => {\n        const [a, b] = loc;\n        const index = transform(a, b, BASE);\n\n        return index;\n      },\n    );\n\n    if (temp.length < size) return [];\n\n    const toBeOccupiedNeighbors = new Set();\n\n    temp.forEach((index) => {\n      const address = reverseTransform(index, BASE);\n      const [nx, ny] = address;\n\n      const neighbors = [\n        [nx, ny - 1],\n        [nx + 1, ny - 1],\n        [nx + 1, ny],\n        [nx + 1, ny + 1],\n        [nx, ny + 1],\n        [nx - 1, ny + 1],\n        [nx - 1, ny],\n        [nx - 1, ny - 1],\n      ];\n\n      neighbors.forEach((neighbor) => {\n        const [a, b] = neighbor;\n\n        if (GameBoard.isValidBoardCoordinate(a, b)) {\n          const i = transform(a, b, BASE);\n\n          if (!temp.includes(i)) {\n            toBeOccupiedNeighbors.add(i);\n          }\n        }\n      });\n    });\n\n    const arr = [...toBeOccupiedNeighbors];\n\n    return arr.map((index) => {\n      const address = reverseTransform(index, BASE);\n\n      return address;\n    });\n  }\n\n  #hasTakenHit() {\n    return this.#NODES.some((node) => node.isHit);\n  }\n\n  #getNode(x, y) {\n    const [BOARD_X] = GameBoard.BOARD_X_Y;\n\n    return this.#NODES[transform(x, y, BOARD_X)];\n  }\n\n  #getCanReceiveShipNodes(SHIP, orientation) {\n    if (!Ship.isValidOrientation(orientation)) return [];\n\n    const availableNodes = this.#NODES.filter(\n      (node) => !node.isHit && !node.isOccupied && !node.isNeighboringOccupied,\n    );\n\n    const { size } = GameBoard.formatShipInfo(SHIP);\n    const canPlace = [];\n\n    availableNodes.forEach((node) => {\n      const [x, y] = node.address;\n\n      const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n      if (\n        toBeOccupied.length === size &&\n        this.#canReceiveShip(SHIP, toBeOccupied)\n      ) {\n        canPlace.push([x, y]);\n      }\n    });\n\n    return canPlace;\n  }\n\n  #availableForShip(SHIP) {\n    const horizontalPlacements = this.#getCanReceiveShipNodes(\n      SHIP,\n      'horizontal',\n    );\n    const verticalPlacements = this.#getCanReceiveShipNodes(SHIP, 'vertical');\n\n    const available = [];\n\n    horizontalPlacements.forEach((loc) => {\n      available.push({\n        loc,\n        orientation: 'horizontal',\n      });\n    });\n\n    verticalPlacements.forEach((loc) => {\n      available.push({\n        loc,\n        orientation: 'vertical',\n      });\n    });\n\n    return available;\n  }\n\n  #canReceiveShip(SHIP, nodeLocations) {\n    const { size } = SHIP.shipInfo;\n\n    if (nodeLocations.length < size) return false;\n\n    return nodeLocations.every((nodeLocation) => {\n      const [x, y] = nodeLocation;\n\n      const [BOARD_X] = GameBoard.BOARD_X_Y;\n\n      const node = this.#NODES[transform(x, y, BOARD_X)];\n\n      return !node.isHit && !node.isNeighboringOccupied && !node.isOccupied;\n    });\n  }\n\n  #replaceShip(SHIP, newOrientation, nx, ny) {\n    const originalInfo = GameBoard.formatShipInfo(SHIP);\n\n    this.#removeShip(SHIP);\n\n    const placed = this.#placeShip(nx, ny, newOrientation, SHIP);\n\n    if (placed) return true;\n\n    const { placeHead, orientation } = originalInfo;\n    const [x, y] = placeHead;\n\n    return this.#placeShip(x, y, orientation, SHIP);\n  }\n\n  #placeShip(x, y, orientation, SHIP) {\n    if (\n      !Ship.isValidOrientation(orientation) ||\n      !GameBoard.isValidBoardCoordinate(x, y)\n    ) {\n      return false;\n    }\n\n    const { size, isOnBoard } = GameBoard.formatShipInfo(SHIP);\n\n    if (isOnBoard) return this.#replaceShip(SHIP, orientation, x, y);\n\n    const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n    if (!this.#canReceiveShip(SHIP, toBeOccupied)) return false;\n\n    toBeOccupied.forEach((nodeLocation) => {\n      const [nx, ny] = nodeLocation;\n      const [BOARD_X] = GameBoard.BOARD_X_Y;\n\n      const node = this.#NODES[transform(nx, ny, BOARD_X)];\n\n      node.occupy(SHIP);\n    });\n\n    SHIP.assignOrientation(orientation);\n    SHIP.assignPlaceOrigin(x, y);\n\n    return true;\n  }\n\n  #removeShip(SHIP) {\n    if (this.#hasTakenHit()) return;\n\n    const { size, orientation, placeHead } = GameBoard.formatShipInfo(SHIP);\n    const [x, y] = placeHead;\n\n    const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n    toBeOccupied.forEach((nodeLocation) => {\n      const [nx, ny] = nodeLocation;\n      const [BOARD_X] = GameBoard.BOARD_X_Y;\n\n      const node = this.#NODES[transform(nx, ny, BOARD_X)];\n      node.removeOccupant();\n    });\n\n    SHIP.removeAssignedPlaceOrigin();\n    SHIP.removeAssignedOrientation();\n  }\n\n  #autoPlaceShip(SHIP) {\n    if (GameBoard.formatShipInfo(SHIP).isOnBoard) {\n      this.#removeShip(SHIP);\n    }\n\n    const availableNodes = this.#availableForShip(SHIP);\n\n    const { element } = getRndElement(availableNodes);\n\n    const { loc, orientation } = element;\n    const [x, y] = loc;\n\n    return {\n      orientation,\n      x,\n      y,\n    };\n  }\n\n  #allShipsOnBoard() {\n    return (\n      this.carrierInfo.isOnBoard &&\n      this.battleShipInfo.isOnBoard &&\n      this.destroyerInfo.isOnBoard &&\n      this.submarineInfo.isOnBoard &&\n      this.patrolBoatInfo.isOnBoard\n    );\n  }\n\n  get canReceiveShipNodeLoc() {\n    return this.#NODES\n      .filter((node) => {\n        const { isOccupied, isNeighboringOccupied, isHit } = node;\n\n        if (isOccupied) return false;\n\n        if (isNeighboringOccupied) return false;\n\n        if (isHit) return false;\n\n        return true;\n      })\n      .map((node) => {\n        const { address } = node;\n\n        return address;\n      });\n  }\n\n  get boardNodes() {\n    return [...this.#NODES];\n  }\n\n  get carrierInfo() {\n    return GameBoard.formatShipInfo(this.#CARRIER);\n  }\n\n  placeCarrier(x, y, orientation) {\n    return this.#placeShip(x, y, orientation, this.#CARRIER);\n  }\n\n  removeCarrier() {\n    this.#removeShip(this.#CARRIER);\n  }\n\n  autoPlaceCarrier() {\n    const { x, y, orientation } = this.#autoPlaceShip(this.#CARRIER);\n\n    return this.placeCarrier(x, y, orientation);\n  }\n\n  get battleShipInfo() {\n    return GameBoard.formatShipInfo(this.#BATTLESHIP);\n  }\n\n  placeBattleShip(x, y, orientation) {\n    return this.#placeShip(x, y, orientation, this.#BATTLESHIP);\n  }\n\n  removeBattleShip() {\n    this.#removeShip(this.#BATTLESHIP);\n  }\n\n  autoPlaceBattleShip() {\n    const { x, y, orientation } = this.#autoPlaceShip(this.#BATTLESHIP);\n\n    return this.placeBattleShip(x, y, orientation);\n  }\n\n  get destroyerInfo() {\n    return GameBoard.formatShipInfo(this.#DESTROYER);\n  }\n\n  placeDestroyer(x, y, orientation) {\n    return this.#placeShip(x, y, orientation, this.#DESTROYER);\n  }\n\n  removeDestroyer() {\n    this.#removeShip(this.#DESTROYER);\n  }\n\n  autoPlaceDestroyer() {\n    const { x, y, orientation } = this.#autoPlaceShip(this.#DESTROYER);\n\n    return this.placeDestroyer(x, y, orientation);\n  }\n\n  get submarineInfo() {\n    return GameBoard.formatShipInfo(this.#SUBMARINE);\n  }\n\n  placeSubmarine(x, y, orientation) {\n    return this.#placeShip(x, y, orientation, this.#SUBMARINE);\n  }\n\n  removeSubmarine() {\n    this.#removeShip(this.#SUBMARINE);\n  }\n\n  autoPlaceSubmarine() {\n    const { x, y, orientation } = this.#autoPlaceShip(this.#SUBMARINE);\n\n    return this.placeSubmarine(x, y, orientation);\n  }\n\n  get patrolBoatInfo() {\n    return GameBoard.formatShipInfo(this.#PATROL_BOAT);\n  }\n\n  placePatrolBoat(x, y, orientation) {\n    return this.#placeShip(x, y, orientation, this.#PATROL_BOAT);\n  }\n\n  removePatrolBoat() {\n    this.#removeShip(this.#PATROL_BOAT);\n  }\n\n  autoPlacePatrolBoat() {\n    const { x, y, orientation } = this.#autoPlaceShip(this.#PATROL_BOAT);\n\n    return this.placePatrolBoat(x, y, orientation);\n  }\n\n  autoPlaceAllShips() {\n    this.autoPlaceCarrier();\n\n    this.autoPlaceBattleShip();\n\n    this.autoPlaceDestroyer();\n\n    this.autoPlacePatrolBoat();\n\n    this.autoPlaceSubmarine();\n  }\n\n  receiveAttack(x, y) {\n    if (!this.#allShipsOnBoard() || !GameBoard.isValidBoardCoordinate(x, y)) {\n      return -1;\n    }\n\n    const node = this.#getNode(x, y);\n\n    return node.hit();\n  }\n\n  get unHitCoordinates() {\n    return this.#NODES\n      .filter((available) => !available.isHit)\n      .map((unHit) => {\n        const { address } = unHit;\n        const [x, y] = address;\n\n        return [x, y];\n      });\n  }\n\n  get hitCoordinates() {\n    return this.#NODES\n      .filter((available) => available.isHit)\n      .map((unHit) => {\n        const { address } = unHit;\n        const [x, y] = address;\n\n        return [x, y];\n      });\n  }\n\n  get allShipsOnBoard() {\n    return this.#allShipsOnBoard();\n  }\n}\n// export default class GameBoard {\n//   BOARD_SIZE;\n\n//   #HORIZONTAL = 'horizontal';\n\n//   #VERTICAL = 'vertical';\n\n//   #transform(x, y) {\n//     return transform(x, y, this.BOARD_SIZE);\n//   }\n\n//   #reverseTransform(index) {\n//     return reverseTransform(index, this.BOARD_SIZE);\n//   }\n\n//   #CARRIER_INFO = {\n//     isOnBoard: false,\n//     occupying: [],\n//     shipHead: [],\n//     orientation: '',\n//     size: 0,\n//     name: '',\n//     exempt: [],\n//   };\n\n//   #BATTLESHIP_INFO = {\n//     isOnBoard: false,\n//     occupying: [],\n//     shipHead: [],\n//     orientation: '',\n//     size: 0,\n//     name: '',\n//     exempt: [],\n//   };\n\n//   #DESTROYER_INFO = {\n//     isOnBoard: false,\n//     occupying: [],\n//     shipHead: [],\n//     orientation: '',\n//     size: 0,\n//     name: '',\n//     exempt: [],\n//   };\n\n//   #SUBMARINE_INFO = {\n//     isOnBoard: false,\n//     occupying: [],\n//     shipHead: [],\n//     orientation: '',\n//     size: 0,\n//     name: '',\n//     exempt: [],\n//   };\n\n//   #PATROL_BOAT_INFO = {\n//     isOnBoard: false,\n//     occupying: [],\n//     shipHead: [],\n//     orientation: '',\n//     size: 0,\n//     name: '',\n//     exempt: [],\n//   };\n\n//   constructor() {\n//     this.BOARD_SIZE = gameSettings.BOARD_SIZE;\n//     this.shipYard = {};\n//     this.ships = [];\n//     this.board = [];\n//     this.#buildBoard();\n//     this.#initializeShips();\n//   }\n\n//   #initializeShips() {\n//     const carrier = new Carrier();\n//     this.shipYard.carrier = carrier;\n//     this.#CARRIER_INFO.size = carrier.length;\n//     this.#CARRIER_INFO.name = carrier.name;\n\n//     const battleship = new BattleShip();\n//     this.shipYard.battleship = battleship;\n//     this.#BATTLESHIP_INFO.size = battleship.length;\n//     this.#BATTLESHIP_INFO.name = battleship.name;\n\n//     const destroyer = new Destroyer();\n//     this.shipYard.destroyer = destroyer;\n//     this.#DESTROYER_INFO.size = destroyer.length;\n//     this.#DESTROYER_INFO.name = destroyer.name;\n\n//     const submarine = new SubMarine();\n//     this.shipYard.submarine = submarine;\n//     this.#SUBMARINE_INFO.size = submarine.length;\n//     this.#SUBMARINE_INFO.name = submarine.name;\n\n//     const patrolBoat = new PatrolBoat();\n//     this.shipYard.patrolBoat = patrolBoat;\n//     this.#PATROL_BOAT_INFO.size = patrolBoat.length;\n//     this.#PATROL_BOAT_INFO.name = patrolBoat.name;\n//   }\n\n//   #buildBoard() {\n//     for (let y = 0; y < this.BOARD_SIZE; y += 1) {\n//       for (let x = 0; x < this.BOARD_SIZE; x += 1) {\n//         const node = new Node(x, y);\n//         this.board[y * this.BOARD_SIZE + x] = node;\n//       }\n//     }\n\n//     this.board.forEach((boardNode) => {\n//       this.#addNeighbors(boardNode);\n//     });\n//   }\n\n//   #addNeighbors(node) {\n//   const { address } = node;\n//   const [x, y] = address;\n\n//   const neighbors = [\n//     [x, y - 1],\n//     [x + 1, y - 1],\n//     [x + 1, y],\n//     [x + 1, y + 1],\n//     [x, y + 1],\n//     [x - 1, y + 1],\n//     [x - 1, y],\n//     [x - 1, y - 1],\n//   ];\n\n//   neighbors.forEach((neighbor) => {\n//     const [nx, ny] = neighbor;\n//     if (this.#isValidCoordinate(nx, ny)) {\n//       const index = this.#transform(nx, ny);\n//       const nodeNeighbor = this.board[index];\n//       node.addNeighbor(nodeNeighbor);\n//     }\n//   });\n// }\n\n//   #isValidCoordinate(x, y) {\n//     return x >= 0 && x < this.BOARD_SIZE && y >= 0 && y < this.BOARD_SIZE;\n//   }\n\n//   #canPlaceShip(x, y) {\n//     if (!this.#isValidCoordinate(x, y)) {\n//       return false;\n//     }\n\n//     const node = this.board[y * this.BOARD_SIZE + x];\n//     if (node.isHit || node.isOccupied || node.isNeighboringOccupied) {\n//       return false;\n//     }\n\n//     return true;\n//   }\n\n//   #boardHitNodes() {\n//     return this.board.filter((node) => node.isHit);\n//   }\n\n// #getToBeOccupied(size, x, y, orientation) {\n//   if (!this.#isValidOrientation(orientation)) {\n//     return [];\n//   }\n\n//   const toBeOccupied = [[x, y]];\n//   if (orientation === 'vertical') {\n//     for (let i = 0; i < size - 1; i += 1) {\n//       const occupied = y + i + 1;\n//       if (this.#isValidCoordinate(x, occupied)) {\n//         toBeOccupied.push([x, occupied]);\n//       }\n//     }\n//   } else if (orientation === 'horizontal') {\n//     for (let i = 0; i < size - 1; i += 1) {\n//       const occupied = x + i + 1;\n//       if (this.#isValidCoordinate(occupied, y)) {\n//         toBeOccupied.push([occupied, y]);\n//       }\n//     }\n//   }\n\n//   return toBeOccupied;\n// }\n\n//   #isValidOrientation(orientation) {\n//     return orientation === this.#HORIZONTAL || orientation === this.#VERTICAL;\n//   }\n\n//   #checkNodeLocations(nodeLocations) {\n//     return nodeLocations.every((nodeLoc) => {\n//       const [nx, ny] = nodeLoc;\n//       return this.#canPlaceShip(nx, ny);\n//     });\n//   }\n\n//   #ShipExempt(SHIP_INFO, shipHead, orientation) {\n//     if (!this.#isValidOrientation(orientation)) return false;\n\n//     const [x, y] = shipHead;\n//     if (!this.#isValidCoordinate(x, y)) return false;\n\n//     const exemptShipHead = shipHead;\n//     const exemptOrientation = orientation;\n//     SHIP_INFO.exempt.push({\n//       exemptShipHead,\n//       exemptOrientation,\n//     });\n\n//     return true;\n//   }\n\n//   #CarrierExempt(shipHead, orientation) {\n//     this.#ShipExempt(this.#CARRIER_INFO, shipHead, orientation);\n//   }\n\n//   #BattleShipExempt(shipHead, orientation) {\n//     this.#ShipExempt(this.#BATTLESHIP_INFO, shipHead, orientation);\n//   }\n\n//   #DestroyerExempt(shipHead, orientation) {\n//     this.#ShipExempt(this.#DESTROYER_INFO, shipHead, orientation);\n//   }\n\n//   #SubMarineExempt(shipHead, orientation) {\n//     this.#ShipExempt(this.#SUBMARINE_INFO, shipHead, orientation);\n//   }\n\n//   #PatrolBoatExempt(shipHead, orientation) {\n//     this.#ShipExempt(this.#PATROL_BOAT_INFO, shipHead, orientation);\n//   }\n\n//   #isShipExempted(SHIP_INFO, shipHead, orientation) {\n//     const [shipHeadX, shipHeadY] = shipHead;\n//     const transformedShipHead = this.#transform(shipHeadX, shipHeadY);\n\n//     if (SHIP_INFO.exempt.length === 0) return false;\n\n//     return SHIP_INFO.exempt.every((exempt) => {\n//       const { exemptShipHead, exemptOrientation } = exempt;\n//       const [x, y] = exemptShipHead;\n//       const exemptTransformed = this.#transform(x, y);\n\n//       return (\n//         exemptTransformed !== transformedShipHead &&\n//         exemptOrientation !== orientation\n//       );\n//     });\n//   }\n\n//   #isCarrierExempted(shipHead, orientation) {\n//     return this.#isShipExempted(this.#CARRIER_INFO, shipHead, orientation);\n//   }\n\n//   #isBattleShipExempted(shipHead, orientation) {\n//     return this.#isShipExempted(this.#BATTLESHIP_INFO, shipHead, orientation);\n//   }\n\n//   #isDestroyerExempted(shipHead, orientation) {\n//     return this.#isShipExempted(this.#DESTROYER_INFO, shipHead, orientation);\n//   }\n\n//   #isSubMarineExempted(shipHead, orientation) {\n//     return this.#isShipExempted(this.#SUBMARINE_INFO, shipHead, orientation);\n//   }\n\n//   #isPatrolBoatExempted(shipHead, orientation) {\n//     return this.#isShipExempted(this.#PATROL_BOAT_INFO, shipHead, orientation);\n//   }\n\n//   // exempt configuration\n//   // remove all ships on board\n//   // place all removed ships on new config\n//   #reformShipPlacements() {\n//     if (this.#CARRIER_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#CARRIER_INFO;\n//       this.#CarrierExempt(shipHead, orientation);\n//       this.removeCarrier();\n//       this.carrierAutoPlace();\n//     }\n\n//     if (this.#BATTLESHIP_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#BATTLESHIP_INFO;\n//       this.#BattleShipExempt(shipHead, orientation);\n//       this.removeBattleShip();\n//       this.battleShipAutoPlace();\n//     }\n\n//     if (this.#DESTROYER_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#DESTROYER_INFO;\n//       this.#DestroyerExempt(shipHead, orientation);\n//       this.removePatrolBoat();\n//       this.destroyerAutoPlace();\n//     }\n\n//     if (this.#SUBMARINE_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#SUBMARINE_INFO;\n//       this.#SubMarineExempt(shipHead, orientation);\n//       this.removeSubMarine();\n//       this.subMarineAutoPlace();\n//     }\n\n//     if (this.#PATROL_BOAT_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#PATROL_BOAT_INFO;\n//       this.#PatrolBoatExempt(shipHead, orientation);\n//       this.removePatrolBoat();\n//       this.patrolBoatAutoPlace();\n//     }\n//   }\n\n//   canBeCarrierShipHead(x, y, orientation) {\n//     if (!this.#isValidOrientation(orientation)) return false;\n//     const { size } = this.#CARRIER_INFO;\n\n//     const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//     if (toBeOccupied.length < size) return false;\n\n//     if (!this.#checkNodeLocations(toBeOccupied)) return false;\n\n//     return true;\n//   }\n\n//   placeCarrier(x, y, orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return false;\n\n//     const { size } = this.#CARRIER_INFO;\n\n//     const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//     if (toBeOccupied.length < size) return false;\n\n//     if (this.#CARRIER_INFO.isOnBoard) {\n//       this.removeCarrier();\n//     }\n\n//     if (!this.#checkNodeLocations(toBeOccupied)) return false;\n\n//     toBeOccupied.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       this.#CARRIER_INFO.occupying.push([nx, ny]);\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.occupy(this.shipYard.carrier);\n//     });\n\n//     this.#CARRIER_INFO.isOnBoard = true;\n//     this.#CARRIER_INFO.shipHead.push(x, y);\n//     this.#CARRIER_INFO.orientation = orientation;\n\n//     return true;\n//   }\n\n//   removeCarrier() {\n//     const { occupying } = this.#CARRIER_INFO;\n\n//     occupying.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n\n//       node.removeOccupant();\n//     });\n\n//     this.#CARRIER_INFO.occupying = [];\n//     this.#CARRIER_INFO.isOnBoard = false;\n//     this.#CARRIER_INFO.shipHead = [];\n//     this.#CARRIER_INFO.orientation = '';\n//   }\n\n//   carrierPlacement(orientation = 'horizontal') {\n// if (!this.#isValidOrientation(orientation)) return [];\n\n// const availableNodes = this.board.filter(\n//   (node) => !node.isHit && !node.isOccupied && !node.isNeighboringOccupied,\n// );\n\n// const { size } = this.#CARRIER_INFO;\n\n// const canPlace = [];\n\n// availableNodes.forEach((node) => {\n//   const [x, y] = node.address;\n\n//   const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//   if (\n//     toBeOccupied.length === size &&\n//     this.#checkNodeLocations(toBeOccupied)\n//   ) {\n//     canPlace.push([x, y]);\n//   }\n// });\n\n// return canPlace;\n//   }\n\n//   #carrierAutoPlaceArray() {\n//     const horizontalPlace = this.carrierPlacement(this.#HORIZONTAL);\n//     const verticalPlace = this.carrierPlacement(this.#VERTICAL);\n\n// const available = [];\n\n// horizontalPlace.forEach((loc) => {\n//   if (!this.#isCarrierExempted(loc, 'horizontal')) {\n//     available.push({\n//       loc,\n//       orientation: 'horizontal',\n//     });\n//   }\n// });\n\n// verticalPlace.forEach((loc) => {\n//   if (!this.#isCarrierExempted(loc, 'vertical')) {\n//     available.push({\n//       loc,\n//       orientation: 'vertical',\n//     });\n//   }\n// });\n\n// return available;\n//   }\n\n//   carrierAutoPlace() {\n//     const available = this.#carrierAutoPlaceArray();\n\n//     if (available.length === 0) {\n//       return [];\n//     }\n\n//     let placed = false;\n\n//     while (!placed) {\n//       const { element } = getRndElement(available);\n\n//       const { loc, orientation } = element;\n\n//       const [x, y] = loc;\n\n//       placed = this.placeCarrier(x, y, orientation);\n//     }\n\n//     return this.carrierPlacementDetails;\n//   }\n\n//   placeBattleShip(x, y, orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return false;\n\n//     const { size } = this.#BATTLESHIP_INFO;\n\n//     const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//     if (toBeOccupied.length < size) return false;\n\n//     if (this.#BATTLESHIP_INFO.isOnBoard) {\n//       this.removeBattleShip();\n//     }\n\n//     if (!this.#checkNodeLocations(toBeOccupied)) return false;\n\n//     toBeOccupied.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       this.#BATTLESHIP_INFO.occupying.push([nx, ny]);\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.occupy(this.shipYard.battleship);\n//     });\n\n//     this.#BATTLESHIP_INFO.isOnBoard = true;\n//     this.#BATTLESHIP_INFO.shipHead.push(x, y);\n//     this.#BATTLESHIP_INFO.orientation = orientation;\n//     return true;\n//   }\n\n//   removeBattleShip() {\n//     const { occupying } = this.#BATTLESHIP_INFO;\n\n//     occupying.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.removeOccupant();\n//     });\n//     this.#BATTLESHIP_INFO.occupying = [];\n//     this.#BATTLESHIP_INFO.isOnBoard = false;\n//     this.#BATTLESHIP_INFO.orientation = '';\n//     this.#BATTLESHIP_INFO.shipHead = [];\n//   }\n\n//   battleShipPlacement(orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return [];\n\n//     const availableNodes = this.board.filter(\n//       (node) => !node.isHit && !node.isOccupied && !node.isNeighboringOccupied,\n//     );\n\n//     const { size } = this.#BATTLESHIP_INFO;\n\n//     const canPlace = [];\n\n//     availableNodes.forEach((node) => {\n//       const [x, y] = node.address;\n\n//       const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//       if (\n//         toBeOccupied.length === size &&\n//         this.#checkNodeLocations(toBeOccupied)\n//       ) {\n//         canPlace.push([x, y]);\n//       }\n//     });\n\n//     return canPlace;\n//   }\n\n//   #battleShipAutoPlaceArray() {\n//     const horizontalPlace = this.battleShipPlacement(this.#HORIZONTAL);\n//     const verticalPlace = this.battleShipPlacement(this.#VERTICAL);\n\n//     const available = [];\n\n//     horizontalPlace.forEach((loc) => {\n//       if (!this.#isBattleShipExempted(loc, 'horizontal')) {\n//         available.push({\n//           loc,\n//           orientation: 'horizontal',\n//         });\n//       }\n//     });\n\n//     verticalPlace.forEach((loc) => {\n//       if (!this.#isBattleShipExempted(loc, 'vertical')) {\n//         available.push({\n//           loc,\n//           orientation: 'vertical',\n//         });\n//       }\n//     });\n\n//     return available;\n//   }\n\n//   battleShipAutoPlace() {\n//     const available = this.#battleShipAutoPlaceArray();\n\n//     if (available.length === 0) {\n//       return [];\n//     }\n\n//     let placed = false;\n\n//     while (!placed) {\n//       const { element } = getRndElement(available);\n\n//       const { loc, orientation } = element;\n\n//       const [x, y] = loc;\n\n//       placed = this.placeBattleShip(x, y, orientation);\n//     }\n\n//     return this.battleShipPlacementDetails;\n//   }\n\n//   placeDestroyer(x, y, orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return false;\n\n//     const { size } = this.#DESTROYER_INFO;\n\n//     const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//     if (toBeOccupied.length < size) return false;\n\n//     if (!this.#checkNodeLocations(toBeOccupied)) return false;\n\n//     if (this.#DESTROYER_INFO.isOnBoard) {\n//       this.removeDestroyer();\n//     }\n\n//     // if (!this.#checkNodeLocations(toBeOccupied)) return false;\n\n//     toBeOccupied.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       this.#DESTROYER_INFO.occupying.push([nx, ny]);\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.occupy(this.shipYard.destroyer);\n//     });\n\n//     this.#DESTROYER_INFO.isOnBoard = true;\n//     this.#DESTROYER_INFO.shipHead.push(x, y);\n//     this.#DESTROYER_INFO.orientation = orientation;\n//     return true;\n//   }\n\n//   removeDestroyer() {\n//     const { occupying } = this.#DESTROYER_INFO;\n\n//     occupying.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.removeOccupant();\n//     });\n//     this.#DESTROYER_INFO.occupying = [];\n//     this.#DESTROYER_INFO.isOnBoard = false;\n//     this.#DESTROYER_INFO.orientation = '';\n//     this.#DESTROYER_INFO.shipHead = [];\n//   }\n\n//   destroyerPlacement(orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return [];\n\n//     const availableNodes = this.board.filter(\n//       (node) => !node.isHit && !node.isOccupied && !node.isNeighboringOccupied,\n//     );\n\n//     const { size } = this.#DESTROYER_INFO;\n\n//     const canPlace = [];\n\n//     availableNodes.forEach((node) => {\n//       const [x, y] = node.address;\n\n//       const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//       if (\n//         toBeOccupied.length === size &&\n//         this.#checkNodeLocations(toBeOccupied)\n//       ) {\n//         canPlace.push([x, y]);\n//       }\n//     });\n\n//     return canPlace;\n//   }\n\n//   #destroyerAutoPlaceArray() {\n//     const horizontalPlace = this.destroyerPlacement(this.#HORIZONTAL);\n//     const verticalPlace = this.destroyerPlacement(this.#VERTICAL);\n\n//     const available = [];\n\n//     horizontalPlace.forEach((loc) => {\n//       available.push({\n//         loc,\n//         orientation: 'horizontal',\n//       });\n//     });\n\n//     verticalPlace.forEach((loc) => {\n//       available.push({\n//         loc,\n//         orientation: 'vertical',\n//       });\n//     });\n\n//     return available;\n//   }\n\n//   destroyerAutoPlace() {\n//     const available = this.#destroyerAutoPlaceArray();\n\n//     if (available.length === 0) {\n//       return [];\n//     }\n\n//     let placed = false;\n\n//     while (!placed) {\n//       const { element } = getRndElement(available);\n\n//       const { loc, orientation } = element;\n\n//       const [x, y] = loc;\n\n//       placed = this.placeDestroyer(x, y, orientation);\n//     }\n\n//     return this.destroyerPlacementDetails;\n//   }\n\n//   placeSubMarine(x, y, orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return false;\n\n//     const { size } = this.#DESTROYER_INFO;\n\n//     const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//     if (toBeOccupied.length < size) return false;\n\n//     if (this.#SUBMARINE_INFO.isOnBoard) {\n//       this.removeSubMarine();\n//     }\n\n//     if (!this.#checkNodeLocations(toBeOccupied)) return false;\n\n//     toBeOccupied.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       this.#SUBMARINE_INFO.occupying.push([nx, ny]);\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.occupy(this.shipYard.submarine);\n//     });\n\n//     this.#SUBMARINE_INFO.isOnBoard = true;\n//     this.#SUBMARINE_INFO.shipHead.push(x, y);\n//     this.#SUBMARINE_INFO.orientation = orientation;\n//     return true;\n//   }\n\n//   removeSubMarine() {\n//     const { occupying } = this.#SUBMARINE_INFO;\n\n//     occupying.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.removeOccupant();\n//     });\n\n//     this.#SUBMARINE_INFO.occupying = [];\n//     this.#SUBMARINE_INFO.isOnBoard = false;\n//     this.#SUBMARINE_INFO.orientation = '';\n//     this.#SUBMARINE_INFO.shipHead = [];\n//   }\n\n//   subMarinePlacement(orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return [];\n\n//     const availableNodes = this.board.filter(\n//       (node) => !node.isHit && !node.isOccupied && !node.isNeighboringOccupied,\n//     );\n\n//     const { size } = this.#SUBMARINE_INFO;\n\n//     const canPlace = [];\n\n//     availableNodes.forEach((node) => {\n//       const [x, y] = node.address;\n\n//       const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//       if (\n//         toBeOccupied.length === size &&\n//         this.#checkNodeLocations(toBeOccupied)\n//       ) {\n//         canPlace.push([x, y]);\n//       }\n//     });\n\n//     return canPlace;\n//   }\n\n//   #subMarineAutoPlaceArray() {\n//     const horizontalPlace = this.subMarinePlacement(this.#HORIZONTAL);\n//     const verticalPlace = this.subMarinePlacement(this.#VERTICAL);\n\n//     const available = [];\n\n//     horizontalPlace.forEach((loc) => {\n//       available.push({\n//         loc,\n//         orientation: 'horizontal',\n//       });\n//     });\n\n//     verticalPlace.forEach((loc) => {\n//       available.push({\n//         loc,\n//         orientation: 'vertical',\n//       });\n//     });\n\n//     return available;\n//   }\n\n//   subMarineAutoPlace() {\n//     const available = this.#subMarineAutoPlaceArray();\n\n//     if (available.length === 0) {\n//       return [];\n//     }\n\n//     let placed = false;\n\n//     while (!placed) {\n//       const { element } = getRndElement(available);\n\n//       const { loc, orientation } = element;\n\n//       const [x, y] = loc;\n\n//       placed = this.placeSubMarine(x, y, orientation);\n//     }\n\n//     return this.subMarinePlacementDetails;\n//   }\n\n//   placePatrolBoat(x, y, orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return false;\n\n//     const { size } = this.#PATROL_BOAT_INFO;\n\n//     const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//     if (toBeOccupied.length < size) return false;\n\n//     if (this.#PATROL_BOAT_INFO.isOnBoard) {\n//       this.removePatrolBoat();\n//     }\n\n//     if (!this.#checkNodeLocations(toBeOccupied)) return false;\n\n//     toBeOccupied.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       this.#PATROL_BOAT_INFO.occupying.push([nx, ny]);\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.occupy(this.shipYard.patrolBoat);\n//     });\n\n//     this.#PATROL_BOAT_INFO.isOnBoard = true;\n//     this.#PATROL_BOAT_INFO.shipHead.push(x, y);\n//     this.#PATROL_BOAT_INFO.orientation = orientation;\n//     return true;\n//   }\n\n//   removePatrolBoat() {\n//     const { occupying } = this.#PATROL_BOAT_INFO;\n\n//     occupying.forEach((location) => {\n//       const [nx, ny] = location;\n\n//       const node = this.board[ny * this.BOARD_SIZE + nx];\n//       node.removeOccupant();\n//     });\n//     this.#PATROL_BOAT_INFO.occupying = [];\n//     this.#PATROL_BOAT_INFO.isOnBoard = false;\n//     this.#PATROL_BOAT_INFO.orientation = '';\n//     this.#PATROL_BOAT_INFO.shipHead = [];\n//   }\n\n//   patrolBoatPlacement(orientation = 'horizontal') {\n//     if (!this.#isValidOrientation(orientation)) return [];\n\n//     const availableNodes = this.board.filter(\n//       (node) => !node.isHit && !node.isOccupied && !node.isNeighboringOccupied,\n//     );\n\n//     const { size } = this.#PATROL_BOAT_INFO;\n\n//     const canPlace = [];\n\n//     availableNodes.forEach((node) => {\n//       const [x, y] = node.address;\n\n//       const toBeOccupied = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n//       if (\n//         toBeOccupied.length === size &&\n//         this.#checkNodeLocations(toBeOccupied)\n//       ) {\n//         canPlace.push([x, y]);\n//       }\n//     });\n\n//     return canPlace;\n//   }\n\n//   #patrolBoatAutoPlaceArray() {\n//     const horizontalPlace = this.patrolBoatPlacement(this.#HORIZONTAL);\n//     const verticalPlace = this.patrolBoatPlacement(this.#VERTICAL);\n\n//     const available = [];\n\n//     horizontalPlace.forEach((loc) => {\n//       available.push({\n//         loc,\n//         orientation: 'horizontal',\n//       });\n//     });\n\n//     verticalPlace.forEach((loc) => {\n//       available.push({\n//         loc,\n//         orientation: 'vertical',\n//       });\n//     });\n\n//     return available;\n//   }\n\n//   patrolBoatAutoPlace() {\n//     const available = this.#patrolBoatAutoPlaceArray();\n\n//     if (available.length === 0) {\n//       return [];\n//     }\n\n//     let placed = false;\n\n//     while (!placed) {\n//       const { element } = getRndElement(available);\n\n//       const { loc, orientation } = element;\n\n//       const [x, y] = loc;\n\n//       placed = this.placePatrolBoat(x, y, orientation);\n//     }\n\n//     return this.patrolBoatPlacementDetails;\n//   }\n\n//   removeAllShips() {\n//     this.removeCarrier();\n//     this.removeBattleShip();\n//     this.removeDestroyer();\n//     this.removeSubMarine();\n//     this.removePatrolBoat();\n//   }\n\n//   allShipsPlacement() {\n//     this.carrierAutoPlace();\n//     this.battleShipAutoPlace();\n//     this.destroyerAutoPlace();\n//     this.subMarineAutoPlace();\n//     this.patrolBoatAutoPlace();\n\n//     return this.shipPlacements;\n//   }\n\n//   receiveAttack(x, y) {\n//     if (!this.#isValidCoordinate(x, y)) return -1;\n\n//     if (!this.#allShipOnBoard()) return -1;\n\n//     const node = this.board[y * this.BOARD_SIZE + x];\n\n//     return node.hit();\n//   }\n\n//   #allShipOnBoard() {\n//     return (\n//       this.#CARRIER_INFO.isOnBoard &&\n//       this.#BATTLESHIP_INFO.isOnBoard &&\n//       this.#DESTROYER_INFO.isOnBoard &&\n//       this.#SUBMARINE_INFO.isOnBoard &&\n//       this.#PATROL_BOAT_INFO.isOnBoard\n//     );\n//   }\n\n//   get isAllShipSunk() {\n//     const ships = Object.values(this.shipYard);\n\n//     const sunkShips = ships.filter((ship) => ship.isSunk());\n\n//     return sunkShips.length === ships.length;\n//   }\n\n//   get carrierSunk() {\n//     return this.shipYard.carrier.isSunk();\n//   }\n\n//   get battleShipSunk() {\n//     return this.shipYard.battleship.isSunk();\n//   }\n\n//   get destroyerSunk() {\n//     return this.shipYard.destroyer.isSunk();\n//   }\n\n//   get submarineSunk() {\n//     return this.shipYard.submarine.isSunk();\n//   }\n\n//   get patrolBoatSunk() {\n//     return this.shipYard.patrolBoat.isSunk();\n//   }\n\n//   get missedShots() {\n//     const shots = this.board.filter((node) => node.isHit);\n//     const missedShots = shots.filter((shot) => !shot.isOccupied);\n//     return missedShots;\n//   }\n\n//   get validMoves() {\n//     const available = this.board.filter((node) => !node.isHit);\n\n//     return available;\n//   }\n\n//   #shipNeighboringLoc(shipInfo) {\n//     const { occupying } = shipInfo;\n//     const neighborLocStore = new Set();\n\n//     occupying.forEach((loc) => {\n//       const [x, y] = loc;\n//       const node = this.board[transform(x, y, this.BOARD_SIZE)];\n//       const { neighbors } = node;\n//       neighbors.forEach((neighbor) => {\n//         if (!neighbor.isOccupied) {\n//           neighborLocStore.add(neighbor.address);\n//         }\n//       });\n//     });\n\n//     return [...neighborLocStore];\n//   }\n\n//   get carrierPlacementDetails() {\n//     return {\n//       shipHead: this.#CARRIER_INFO.shipHead,\n//       isOnBoard: this.#CARRIER_INFO.isOnBoard,\n//       occupyingLoc: this.#CARRIER_INFO.occupying,\n//       orientation: this.#CARRIER_INFO.orientation,\n//       name: this.#CARRIER_INFO.name,\n//       isSunk: this.carrierSunk,\n//       neighborLoc: this.#shipNeighboringLoc(this.#CARRIER_INFO),\n//     };\n//   }\n\n//   get battleShipPlacementDetails() {\n//     return {\n//       shipHead: this.#BATTLESHIP_INFO.shipHead,\n//       isOnBoard: this.#BATTLESHIP_INFO.isOnBoard,\n//       occupyingLoc: this.#BATTLESHIP_INFO.occupying,\n//       orientation: this.#BATTLESHIP_INFO.orientation,\n//       name: this.#BATTLESHIP_INFO.name,\n//       isSunk: this.battleShipSunk,\n//       neighborLoc: this.#shipNeighboringLoc(this.#BATTLESHIP_INFO),\n//     };\n//   }\n\n//   get destroyerPlacementDetails() {\n//     return {\n//       shipHead: this.#DESTROYER_INFO.shipHead,\n//       isOnBoard: this.#DESTROYER_INFO.isOnBoard,\n//       occupyingLoc: this.#DESTROYER_INFO.occupying,\n//       orientation: this.#DESTROYER_INFO.orientation,\n//       name: this.#DESTROYER_INFO.name,\n//       isSunk: this.destroyerSunk,\n//       neighborLoc: this.#shipNeighboringLoc(this.#DESTROYER_INFO),\n//     };\n//   }\n\n//   get subMarinePlacementDetails() {\n//     return {\n//       shipHead: this.#SUBMARINE_INFO.shipHead,\n//       isOnBoard: this.#SUBMARINE_INFO.isOnBoard,\n//       occupyingLoc: this.#SUBMARINE_INFO.occupying,\n//       orientation: this.#SUBMARINE_INFO.orientation,\n//       name: this.#SUBMARINE_INFO.name,\n//       isSunk: this.submarineSunk,\n//       neighborLoc: this.#shipNeighboringLoc(this.#SUBMARINE_INFO),\n//     };\n//   }\n\n//   get patrolBoatPlacementDetails() {\n//     return {\n//       shipHead: this.#PATROL_BOAT_INFO.shipHead,\n//       isOnBoard: this.#PATROL_BOAT_INFO.isOnBoard,\n//       occupyingLoc: this.#PATROL_BOAT_INFO.occupying,\n//       orientation: this.#PATROL_BOAT_INFO.orientation,\n//       name: this.#PATROL_BOAT_INFO.name,\n//       isSunk: this.patrolBoatSunk,\n//       neighborLoc: this.#shipNeighboringLoc(this.#PATROL_BOAT_INFO),\n//     };\n//   }\n\n//   get shipPlacements() {\n//     const carrierPlacement = this.carrierPlacementDetails;\n\n//     const battleShipPlacement = this.battleShipPlacementDetails;\n\n//     const destroyerPlacement = this.destroyerPlacementDetails;\n\n//     const subMarinePlacement = this.subMarinePlacementDetails;\n\n//     const patrolBoatPlacement = this.patrolBoatPlacementDetails;\n\n//     return {\n//       carrierPlacement,\n//       battleShipPlacement,\n//       destroyerPlacement,\n//       subMarinePlacement,\n//       patrolBoatPlacement,\n//     };\n//   }\n\n//   get allShipsOnBoard() {\n//     return (\n//       this.#CARRIER_INFO.isOnBoard &&\n//       this.#BATTLESHIP_INFO.isOnBoard &&\n//       this.#DESTROYER_INFO.isOnBoard &&\n//       this.#SUBMARINE_INFO.isOnBoard &&\n//       this.#PATROL_BOAT_INFO.isOnBoard\n//     );\n//   }\n\n//   get copy() {\n//     const boardCopy = new GameBoard();\n\n//     if (this.#CARRIER_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#CARRIER_INFO;\n//       const [x, y] = shipHead;\n//       boardCopy.placeCarrier(x, y, orientation);\n//     }\n\n//     if (this.#BATTLESHIP_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#BATTLESHIP_INFO;\n//       const [x, y] = shipHead;\n//       boardCopy.placeBattleShip(x, y, orientation);\n//     }\n\n//     if (this.#DESTROYER_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#DESTROYER_INFO;\n//       const [x, y] = shipHead;\n//       boardCopy.placeDestroyer(x, y, orientation);\n//     }\n\n//     if (this.#SUBMARINE_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#SUBMARINE_INFO;\n//       const [x, y] = shipHead;\n//       boardCopy.placeSubMarine(x, y, orientation);\n//     }\n\n//     if (this.#PATROL_BOAT_INFO.isOnBoard) {\n//       const { shipHead, orientation } = this.#PATROL_BOAT_INFO;\n//       const [x, y] = shipHead;\n//       boardCopy.placePatrolBoat(x, y, orientation);\n//     }\n\n//     const hitNodes = this.#boardHitNodes();\n\n//     hitNodes.forEach((node) => {\n//       const [x, y] = node.address;\n\n//       boardCopy.receiveAttack(x, y);\n//     });\n\n//     return boardCopy;\n//   }\n// }\n","import GameBoard from './game-board.js';\n\nexport default class Player {\n  #PLAYER_BOARD;\n\n  #NAME;\n\n  constructor(name) {\n    if (typeof name !== 'string' || name.trim() === '') {\n      throw new Error('Invalid name: expect non-empty string as player name');\n    }\n\n    this.#NAME = name;\n\n    this.#PLAYER_BOARD = new GameBoard();\n  }\n\n  get name() {\n    return this.#NAME;\n  }\n\n  get boardCopy() {\n    return GameBoard.createCopy(this.#PLAYER_BOARD);\n  }\n\n  get validMoves() {\n    return this.#PLAYER_BOARD.unHitCoordinates;\n  }\n\n  placeCarrier(x, y, orientation = 'horizontal') {\n    return this.#PLAYER_BOARD.placeCarrier(x, y, orientation);\n  }\n\n  removeCarrier() {\n    this.#PLAYER_BOARD.removeCarrier();\n  }\n\n  get carrierInfo() {\n    return this.#PLAYER_BOARD.carrierInfo;\n  }\n\n  autoPlaceCarrier() {\n    return this.#PLAYER_BOARD.autoPlaceCarrier();\n  }\n\n  placeBattleShip(x, y, orientation = 'horizontal') {\n    return this.#PLAYER_BOARD.placeBattleShip(x, y, orientation);\n  }\n\n  removeBattleShip() {\n    this.#PLAYER_BOARD.removeBattleShip();\n  }\n\n  get battleShipInfo() {\n    return this.#PLAYER_BOARD.battleShipInfo;\n  }\n\n  autoPlaceBattleShip() {\n    return this.#PLAYER_BOARD.autoPlaceBattleShip();\n  }\n\n  placeDestroyer(x, y, orientation = 'horizontal') {\n    return this.#PLAYER_BOARD.placeDestroyer(x, y, orientation);\n  }\n\n  removeDestroyer() {\n    this.#PLAYER_BOARD.removeDestroyer();\n  }\n\n  get destroyerInfo() {\n    return this.#PLAYER_BOARD.destroyerInfo;\n  }\n\n  autoPlaceDestroyer() {\n    return this.#PLAYER_BOARD.autoPlaceDestroyer();\n  }\n\n  placeSubmarine(x, y, orientation = 'horizontal') {\n    return this.#PLAYER_BOARD.placeSubmarine(x, y, orientation);\n  }\n\n  removeSubmarine() {\n    return this.#PLAYER_BOARD.removeSubmarine();\n  }\n\n  get submarineInfo() {\n    return this.#PLAYER_BOARD.submarineInfo;\n  }\n\n  autoPlaceSubmarine() {\n    return this.#PLAYER_BOARD.autoPlaceSubmarine();\n  }\n\n  placePatrolBoat(x, y, orientation = 'horizontal') {\n    return this.#PLAYER_BOARD.placePatrolBoat(x, y, orientation);\n  }\n\n  removePatrolBoat() {\n    this.#PLAYER_BOARD.removePatrolBoat();\n  }\n\n  get patrolBoatInfo() {\n    return this.#PLAYER_BOARD.patrolBoatInfo;\n  }\n\n  autoPlacePatrolBoat() {\n    return this.#PLAYER_BOARD.autoPlacePatrolBoat();\n  }\n\n  receiveAttack(x, y) {\n    return this.#PLAYER_BOARD.receiveAttack(x, y);\n  }\n\n  autoPlaceAllShips() {\n    this.#PLAYER_BOARD.autoPlaceAllShips();\n  }\n\n  allShipSunk() {\n    if (!this.#PLAYER_BOARD.allShipsOnBoard) return false;\n\n    return (\n      this.#PLAYER_BOARD.carrierInfo.isSunk &&\n      this.#PLAYER_BOARD.battleShipInfo.isSunk &&\n      this.#PLAYER_BOARD.destroyerInfo.isSunk &&\n      this.#PLAYER_BOARD.submarineInfo.isSunk &&\n      this.#PLAYER_BOARD.patrolBoatInfo.isSunk\n    );\n  }\n\n  get allShipsOnBoard() {\n    return this.#PLAYER_BOARD.allShipsOnBoard;\n  }\n}\n","import Player from './player.js';\n\nexport default class HumanPlayer extends Player {\n  constructor() {\n    super('Human');\n  }\n}\n","import Player from './player.js';\nimport getRndElement from './helper_module/rnd-array-element.js';\n\nexport default class ComputerPlayer extends Player {\n  constructor() {\n    super('jarvis');\n  }\n\n  getAttack(enemy) {\n    if (!(enemy instanceof Player)) {\n      throw new Error('Invalid enemy: expected instance of Player');\n    }\n\n    if (this.allShipSunk()) {\n      return null; // Returning null when all ships are sunk\n    }\n\n    const { validMoves } = enemy;\n\n    if (validMoves.length === 0) {\n      return null; // Returning null when there are no valid moves left\n    }\n\n    const { element } = getRndElement(validMoves);\n\n    return element; // Return the chosen attack coordinates\n  }\n}\n","import HumanPlayer from './human-player.js';\nimport ComputerPlayer from './computer-player.js';\n\nexport default class GameRound {\n  #HUMAN_PLAYER = null;\n\n  #COMPUTER_PLAYER = null;\n\n  #activePlayer = null;\n\n  #HIT_STATUS_0 = 0;\n\n  #ROUND_WINNER_NAME = '';\n\n  #ROUND_WON = false;\n\n  #switchActivePlayer() {\n    if (this.#activePlayer === this.#HUMAN_PLAYER) {\n      this.#activePlayer = this.#COMPUTER_PLAYER;\n    } else if (this.#activePlayer === this.#COMPUTER_PLAYER) {\n      this.#activePlayer = this.#HUMAN_PLAYER;\n    }\n  }\n\n  #canAddPlayer() {\n    return this.#COMPUTER_PLAYER === null || this.#HUMAN_PLAYER === null;\n  }\n\n  addBotPlayer() {\n    if (this.#COMPUTER_PLAYER !== null) return false;\n\n    this.#COMPUTER_PLAYER = new ComputerPlayer();\n\n    if (!this.#canAddPlayer()) {\n      this.#activePlayer = this.#COMPUTER_PLAYER;\n    }\n\n    return true;\n  }\n\n  addHumanPlayer() {\n    if (this.#HUMAN_PLAYER !== null) return false;\n\n    this.#HUMAN_PLAYER = new HumanPlayer();\n\n    if (!this.#canAddPlayer()) {\n      this.#activePlayer = this.#HUMAN_PLAYER;\n    }\n\n    return true;\n  }\n\n  getActivePlayer() {\n    if (this.#activePlayer === null) return null;\n\n    const playerName = this.#activePlayer.name;\n\n    const isBot = this.#activePlayer === this.#COMPUTER_PLAYER;\n    const isHuman = this.#activePlayer === this.#HUMAN_PLAYER;\n\n    return {\n      playerName,\n      isBot,\n      isHuman,\n    };\n  }\n\n  removePlayers() {\n    this.#COMPUTER_PLAYER = null;\n    this.#HUMAN_PLAYER = null;\n    this.#activePlayer = null;\n  }\n\n  humanPlayerDetails() {\n    if (this.#HUMAN_PLAYER === null) return null;\n\n    const playerName = this.#HUMAN_PLAYER.name;\n\n    return {\n      playerName,\n    };\n  }\n\n  botPlayerDetails() {\n    if (this.#COMPUTER_PLAYER === null) return null;\n\n    const playerName = this.#COMPUTER_PLAYER.name;\n\n    return {\n      playerName,\n    };\n  }\n\n  botShipDetails() {\n    const {\n      carrierInfo,\n      battleShipInfo,\n      destroyerInfo,\n      submarineInfo,\n      patrolBoatInfo,\n    } = this.#COMPUTER_PLAYER;\n\n    return {\n      carrierInfo,\n      battleShipInfo,\n      destroyerInfo,\n      submarineInfo,\n      patrolBoatInfo,\n    };\n  }\n\n  humanPlayerShipDetails() {\n    const {\n      carrierInfo,\n      battleShipInfo,\n      destroyerInfo,\n      submarineInfo,\n      patrolBoatInfo,\n    } = this.#HUMAN_PLAYER;\n\n    return {\n      carrierInfo,\n      battleShipInfo,\n      destroyerInfo,\n      submarineInfo,\n      patrolBoatInfo,\n    };\n  }\n\n  placeHumanPlayerCarrier(x, y, orientation = 'horizontal') {\n    return this.#HUMAN_PLAYER.placeCarrier(x, y, orientation);\n  }\n\n  placeHumanPlayerBattleShip(x, y, orientation = 'horizontal') {\n    return this.#HUMAN_PLAYER.placeBattleShip(x, y, orientation);\n  }\n\n  placeHumanPlayerDestroyer(x, y, orientation = 'horizontal') {\n    return this.#HUMAN_PLAYER.placeDestroyer(x, y, orientation);\n  }\n\n  placeHumanPlayerSubMarine(x, y, orientation = 'horizontal') {\n    return this.#HUMAN_PLAYER.placeSubmarine(x, y, orientation);\n  }\n\n  placeHumanPlayerPatrolBoat(x, y, orientation = 'horizontal') {\n    return this.#HUMAN_PLAYER.placePatrolBoat(x, y, orientation);\n  }\n\n  placeComputerCarrier(x, y, orientation = 'horizontal') {\n    return this.#COMPUTER_PLAYER.placeCarrier(x, y, orientation);\n  }\n\n  placeComputerBattleShip(x, y, orientation = 'horizontal') {\n    return this.#COMPUTER_PLAYER.placeBattleShip(x, y, orientation);\n  }\n\n  placeComputerDestroyer(x, y, orientation = 'horizontal') {\n    return this.#COMPUTER_PLAYER.placeDestroyer(x, y, orientation);\n  }\n\n  placeComputerSubMarine(x, y, orientation = 'horizontal') {\n    return this.#COMPUTER_PLAYER.placeSubMarine(x, y, orientation);\n  }\n\n  placeComputerPatrolBoat(x, y, orientation = 'horizontal') {\n    return this.#COMPUTER_PLAYER.placePatrolBoat(x, y, orientation);\n  }\n\n  autoPlaceHumanShips() {\n    return this.#HUMAN_PLAYER.autoPlaceAllShips();\n  }\n\n  autoPlaceBotShips() {\n    return this.#COMPUTER_PLAYER.autoPlaceAllShips();\n  }\n\n  #botMove(x, y) {\n    if (this.#activePlayer !== this.#COMPUTER_PLAYER) return -1;\n\n    const hitStatus = this.#HUMAN_PLAYER.receiveAttack(x, y);\n\n    if (hitStatus === this.#HIT_STATUS_0) {\n      this.#switchActivePlayer();\n    }\n\n    if (this.#HUMAN_PLAYER.allShipSunk()) {\n      this.#ROUND_WINNER_NAME = this.#COMPUTER_PLAYER.name;\n      this.#ROUND_WON = true;\n    }\n\n    return hitStatus;\n  }\n\n  botMove() {\n    const [x, y] = this.#COMPUTER_PLAYER.getAttack(this.#HUMAN_PLAYER);\n\n    const hitStatus = this.#botMove(x, y);\n    const move = [x, y];\n\n    return { move, hitStatus };\n  }\n\n  humanPlayerMove(x, y) {\n    if (this.#activePlayer !== this.#HUMAN_PLAYER) return -1;\n\n    const hitStatus = this.#COMPUTER_PLAYER.receiveAttack(x, y);\n\n    if (hitStatus === this.#HIT_STATUS_0) {\n      this.#switchActivePlayer();\n    }\n\n    if (this.#COMPUTER_PLAYER.allShipSunk()) {\n      this.#ROUND_WINNER_NAME = this.#HUMAN_PLAYER.name;\n      this.#ROUND_WON = true;\n    }\n\n    return hitStatus;\n  }\n\n  get roundState() {\n    return {\n      roundWon: this.#ROUND_WON,\n      winnerName: this.#ROUND_WINNER_NAME,\n    };\n  }\n\n  get canPlayRound() {\n    return (\n      this.#COMPUTER_PLAYER !== null &&\n      this.#HUMAN_PLAYER !== null &&\n      this.#COMPUTER_PLAYER.allShipsOnBoard &&\n      this.#HUMAN_PLAYER.allShipsOnBoard\n    );\n  }\n}\n","import GameRound from './game-round.js';\n\nexport default class GameController {\n  #GAME_ROUND = null;\n\n  #ROUND_START = false;\n\n  constructor() {\n    this.#GAME_ROUND = new GameRound();\n  }\n\n  placeHumanPlayerCarrier(x, y, orientation) {\n    if (!this.#ROUND_START) return false;\n\n    return this.#GAME_ROUND.placeHumanPlayerCarrier(x, y, orientation);\n  }\n\n  placeHumanPlayerBattleShip(x, y, orientation) {\n    if (!this.#ROUND_START) return false;\n\n    return this.#GAME_ROUND.placeHumanPlayerBattleShip(x, y, orientation);\n  }\n\n  placeHumanPlayerDestroyer(x, y, orientation) {\n    if (!this.#ROUND_START) return false;\n\n    return this.#GAME_ROUND.placeHumanPlayerDestroyer(x, y, orientation);\n  }\n\n  placeHumanPlayerSubMarine(x, y, orientation) {\n    if (!this.#ROUND_START) return false;\n\n    return this.#GAME_ROUND.placeHumanPlayerSubMarine(x, y, orientation);\n  }\n\n  placeHumanPlayerPatrolBoat(x, y, orientation) {\n    if (!this.#ROUND_START) return false;\n\n    return this.#GAME_ROUND.placeHumanPlayerPatrolBoat(x, y, orientation);\n  }\n\n  autoPlaceHumanPlayerShips() {\n    if (!this.#ROUND_START) return;\n\n    this.#GAME_ROUND.autoPlaceHumanShips();\n  }\n\n  autoPlaceBotShips() {\n    if (!this.#ROUND_START) return;\n\n    this.#GAME_ROUND.autoPlaceBotShips();\n  }\n\n  get humanPlayerDetails() {\n    if (!this.#ROUND_START) return false;\n\n    return this.#GAME_ROUND.humanPlayerDetails();\n  }\n\n  get botPlayerDetails() {\n    if (!this.#ROUND_START) return false;\n\n    return this.#GAME_ROUND.botPlayerDetails();\n  }\n\n  humanPlayerShipDetails() {\n    return this.#GAME_ROUND.humanPlayerShipDetails();\n  }\n\n  botPlayerShipDetails() {\n    return this.#GAME_ROUND.botShipDetails();\n  }\n\n  get roundState() {\n    const state = this.#GAME_ROUND.roundState;\n    const { canPlayRound } = this.#GAME_ROUND;\n\n    return {\n      ...state,\n      canPlayRound,\n    };\n  }\n\n  getActivePlayer() {\n    if (!this.#ROUND_START) return {};\n\n    return this.#GAME_ROUND.getActivePlayer();\n  }\n\n  computerPlayerMove() {\n    if (!this.#ROUND_START) return false;\n\n    const { roundWon } = this.roundState;\n\n    if (roundWon) return {};\n\n    const { move, hitStatus } = this.#GAME_ROUND.botMove();\n\n    return { hitStatus, move };\n  }\n\n  humanPlayerMove(x, y) {\n    if (!this.#ROUND_START) return false;\n\n    const { roundWon } = this.roundState;\n\n    if (roundWon) return {};\n\n    const hitStatus = this.#GAME_ROUND.humanPlayerMove(x, y);\n\n    return hitStatus;\n  }\n\n  endRound() {\n    this.#ROUND_START = false;\n  }\n\n  startRound() {\n    this.#GAME_ROUND = new GameRound();\n    this.#GAME_ROUND.addBotPlayer();\n    this.#GAME_ROUND.addHumanPlayer();\n    this.#ROUND_START = true;\n  }\n}\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import createLoadScreen from './dom_module/loading-screen.js';\nimport createHomePage from './dom_module/home-page.js';\nimport createPlaySetupPage from './dom_module/play-setup.js';\nimport createGamePlayPage from './dom_module/game-play.js';\nimport createRoundLossPage from './dom_module/round-loss-modal.js';\nimport createRoundWinPage from './dom_module/round-win-modal.js';\nimport createTutorialPage from './dom_module/tutorial-page.js';\n\nimport GameController from './game-controller.js';\n\nimport './style.css';\nimport GameBoard from './game-board.js';\n\nconst GAME_CONTROLLER = new GameController();\n\nconst LOAD_SCREEN = createLoadScreen();\nconst HOME_PAGE_SCREEN = createHomePage();\nconst ROUND_LOSS_MODAL = createRoundLossPage();\nconst ROUND_WIN_MODAL = createRoundWinPage();\nconst TUTORIAL_PAGE_SCREEN = createTutorialPage();\nlet PLAY_SETUP_SCREEN;\nlet GAME_PLAY_SCREEN;\n\nconst DOC_BODY = document.querySelector('body');\n\nfunction changeScreen(incoming, delay = 100) {\n  const container = document.querySelector('body');\n\n  setTimeout(() => {\n    container.innerHTML = '';\n    container.appendChild(incoming);\n  }, delay);\n}\n\nfunction openModal(modalEl) {\n  DOC_BODY.appendChild(modalEl);\n  modalEl.showModal();\n}\n\nfunction closeModal(modalEl) {\n  modalEl.close();\n  DOC_BODY.removeChild(modalEl);\n}\n\nTUTORIAL_PAGE_SCREEN.homeBtn.addEventListener('click', () => {\n  changeScreen(HOME_PAGE_SCREEN.homePageContainer);\n});\n\nROUND_LOSS_MODAL.homeBtn.addEventListener('click', () => {\n  closeModal(ROUND_LOSS_MODAL.roundLossDialog);\n\n  changeScreen(LOAD_SCREEN.loadingScreenContainer);\n});\n\nROUND_WIN_MODAL.homeBtn.addEventListener('click', () => {\n  closeModal(ROUND_WIN_MODAL.roundWinDialog);\n\n  changeScreen(LOAD_SCREEN.loadingScreenContainer);\n});\n\nfunction attachShipToBoard(shipInfo) {\n  const { isOnBoard, placeHead, size, orientation } = shipInfo;\n\n  if (!isOnBoard) return [];\n\n  const [x, y] = placeHead;\n  const occupyingLoc = GameBoard.getToBeOccupied(size, x, y, orientation);\n\n  const [start] = occupyingLoc.slice(0, 1);\n  const [end] = occupyingLoc.slice(-1);\n\n  return [start, end];\n}\n\nfunction processShipPlacing(x, y, orientation, name, shipSize) {\n  const oldInfo = {\n    x,\n    y,\n    orientation,\n  };\n  let attached = [];\n  let newInfo = {};\n\n  switch (shipSize) {\n    case '5':\n      GAME_CONTROLLER.placeHumanPlayerCarrier(\n        Number(x),\n        Number(y),\n        orientation,\n      );\n\n      newInfo = GAME_CONTROLLER.humanPlayerShipDetails().carrierInfo;\n      attached = attachShipToBoard(newInfo);\n      break;\n\n    case '4':\n      GAME_CONTROLLER.placeHumanPlayerBattleShip(\n        Number(x),\n        Number(y),\n        orientation,\n      );\n\n      newInfo = GAME_CONTROLLER.humanPlayerShipDetails().battleShipInfo;\n\n      attached = attachShipToBoard(newInfo);\n      break;\n\n    case '3':\n      if (name === 'destroyer') {\n        GAME_CONTROLLER.placeHumanPlayerDestroyer(\n          Number(x),\n          Number(y),\n          orientation,\n        );\n\n        newInfo = GAME_CONTROLLER.humanPlayerShipDetails().destroyerInfo;\n        attached = attachShipToBoard(newInfo);\n      } else if (name === 'submarine') {\n        GAME_CONTROLLER.placeHumanPlayerSubMarine(\n          Number(x),\n          Number(y),\n          orientation,\n        );\n        newInfo = GAME_CONTROLLER.humanPlayerShipDetails().submarineInfo;\n\n        attached = attachShipToBoard(newInfo);\n      }\n\n      break;\n\n    case '2':\n      GAME_CONTROLLER.placeHumanPlayerPatrolBoat(\n        Number(x),\n        Number(y),\n        orientation,\n      );\n\n      newInfo = GAME_CONTROLLER.humanPlayerShipDetails().patrolBoatInfo;\n      attached = attachShipToBoard(newInfo);\n\n      break;\n\n    default:\n      break;\n  }\n\n  return { attached, newInfo, oldInfo };\n}\n\nfunction runBoardItem(e) {\n  const activeShip = document.querySelector('.ship.active');\n\n  if (!activeShip) return;\n\n  const { shipSize, orientation, name } = activeShip.dataset;\n  const current = e.currentTarget;\n  const { x, y } = current.dataset;\n\n  const { attached, newInfo } = processShipPlacing(\n    Number(x),\n    Number(y),\n    orientation,\n    name,\n    shipSize,\n    activeShip,\n  );\n\n  if (\n    attached.length === 0 ||\n    newInfo.orientation.toUpperCase() !== orientation.toUpperCase() ||\n    newInfo.placeHead[0] !== Number(x) ||\n    newInfo.placeHead[1] !== Number(y)\n  ) {\n    activeShip.classList.add('fail-place');\n\n    setTimeout(() => {\n      activeShip.classList.remove('fail-place');\n    }, 800);\n\n    return;\n  }\n\n  PLAY_SETUP_SCREEN.boardNodesContainer.appendChild(activeShip);\n\n  const [start, end] = attached;\n  const [sx, sy] = start;\n  const [ex, ey] = end;\n\n  activeShip.style.gridArea = `X${sx}-Y${sy} / X${sx}-Y${sy} / X${ex}-Y${ey} / X${ex}-Y${ey}`;\n}\n\nlet humanShipSunk = [];\nlet botShipSunk = [];\n\nfunction processHumanShipSink(GAME__CONTROLLER, BOT_PLAYER_EL_STRUCTURE) {\n  const botPlayerShipDetails = GAME__CONTROLLER.botPlayerShipDetails();\n\n  const botShipsDetails = Object.values(botPlayerShipDetails);\n\n  botShipsDetails.forEach((shipDetails) => {\n    const { isSunk, name, size, placeHead, orientation } = shipDetails;\n    const neighborLoc = GameBoard.getNeighboringLoc(\n      size,\n      placeHead[0],\n      placeHead[1],\n      orientation,\n    );\n\n    if (isSunk && !botShipSunk.includes(name)) {\n      botShipSunk.push(name);\n\n      const shipEl = BOT_PLAYER_EL_STRUCTURE.botShipYard.querySelector(\n        `.ship.${name}`,\n      );\n      shipEl.classList.add('sunk');\n      neighborLoc.forEach((loc) => {\n        const [x, y] = loc;\n\n        const boardItem =\n          BOT_PLAYER_EL_STRUCTURE.boardNodesContainer.querySelector(\n            `.bot-player-board .board-item[data-x='${x}'][data-y='${y}']`,\n          );\n\n        boardItem.dataset.hitStatus = 3;\n      });\n    }\n  });\n  const { roundWon } = GAME__CONTROLLER.roundState;\n\n  if (roundWon) {\n    setTimeout(() => {\n      openModal(ROUND_WIN_MODAL.roundWinDialog);\n    }, 300);\n  }\n}\n\nfunction processBotShipSink(GAME__CONTROLLER, HUMAN_EL_STRUCTURE) {\n  const humanPlayerShipDetails = GAME__CONTROLLER.humanPlayerShipDetails();\n\n  const humanShipDetails = Object.values(humanPlayerShipDetails);\n\n  humanShipDetails.forEach((shipDetails) => {\n    const { isSunk, name, size, placeHead, orientation } = shipDetails;\n    const neighborLoc = GameBoard.getNeighboringLoc(\n      size,\n      placeHead[0],\n      placeHead[1],\n      orientation,\n    );\n\n    if (isSunk && !humanShipSunk.includes(name)) {\n      humanShipSunk.push(name);\n      neighborLoc.forEach((loc) => {\n        const [x, y] = loc;\n\n        const boardItem = HUMAN_EL_STRUCTURE.boardNodesContainer.querySelector(\n          `.board-item[data-x='${x}'][data-y='${y}']`,\n        );\n\n        boardItem.dataset.hitStatus = 3;\n      });\n    }\n  });\n  const { roundWon } = GAME__CONTROLLER.roundState;\n\n  if (roundWon) {\n    setTimeout(() => {\n      openModal(ROUND_LOSS_MODAL.roundLossDialog);\n    }, 300);\n  }\n}\n\nfunction placeShipOnPlayerBoard(\n  playerElementStruct,\n  placementShipsDetails,\n  addMask = false,\n) {\n  const { boardNodesContainer, boardClassName } = playerElementStruct;\n\n  const shipKeys = Object.keys(placementShipsDetails);\n\n  shipKeys.forEach((key) => {\n    const shipPlacement = placementShipsDetails[key];\n    const { placeHead, orientation, size } = shipPlacement;\n    const occupyingLoc = GameBoard.getToBeOccupied(\n      size,\n      placeHead[0],\n      placeHead[1],\n      orientation,\n    );\n\n    occupyingLoc.forEach((loc) => {\n      const [x, y] = loc;\n\n      const boardItem = boardNodesContainer.querySelector(\n        `${boardClassName} .board-item[data-x='${x}'][data-y='${y}']`,\n      );\n\n      boardItem.dataset.hasShip = true;\n      boardItem.dataset.mask = addMask;\n    });\n  });\n}\n\nfunction gamePlayScreenEventListeners(gamePlayScreen, gameController_) {\n  const {\n    turnMarkers,\n    humanPlayerStructure,\n    botPlayerStructure,\n    homeIconContainer,\n  } = gamePlayScreen;\n\n  let { isHuman, isBot } = gameController_.getActivePlayer();\n  const [turnMarkerEl, turnMarkerEl2] = turnMarkers;\n  const botMoveStore = [];\n\n  if (isHuman) {\n    turnMarkerEl.dataset.turnIndicator = 'human';\n    turnMarkerEl2.dataset.turnIndicator = 'human';\n  }\n\n  if (isBot) {\n    turnMarkerEl.dataset.turnIndicator = 'bot';\n    turnMarkerEl2.dataset.turnIndicator = 'bot';\n  }\n\n  const humanPlayerShipDetails = gameController_.humanPlayerShipDetails();\n  const botPlayerShipDetails = gameController_.botPlayerShipDetails();\n\n  placeShipOnPlayerBoard(humanPlayerStructure, humanPlayerShipDetails);\n  placeShipOnPlayerBoard(botPlayerStructure, botPlayerShipDetails); // add mask for production\n\n  botPlayerStructure.playerBoard.addEventListener('click', (e) => {\n    const { target } = e;\n\n    if (!target.classList.contains('board-item')) return;\n\n    const { roundWon } = gameController_.roundState;\n\n    if (roundWon) {\n      return;\n    }\n\n    if (Number(target.dataset.hitStatus) >= 0) return;\n\n    if (isHuman && botMoveStore.length === 0) {\n      const { x, y } = target.dataset;\n      const hitStatus = gameController_.humanPlayerMove(Number(x), Number(y));\n      const boardItem = botPlayerStructure.boardNodesContainer.querySelector(\n        `.board-item[data-x='${x}'][data-y='${y}']`,\n      );\n\n      boardItem.dataset.hitStatus = hitStatus;\n\n      if (hitStatus === 2) {\n        processHumanShipSink(gameController_, botPlayerStructure);\n      }\n    }\n\n    ({ isBot, isHuman } = gameController_.getActivePlayer());\n\n    if (isBot) {\n      humanPlayerStructure.boardNodesContainer.scrollIntoView({\n        block: 'center',\n        inline: 'center',\n        behavior: 'smooth',\n      });\n\n      do {\n        const { move, hitStatus } = gameController_.computerPlayerMove();\n        // const manualMoveX = Number(prompt('Choose x: '));\n        // const manualMoveY = Number(prompt('Choose Y: '));\n\n        // const status = gameController_.botMove(manualMoveX, manualMoveY);\n        // const move = [manualMoveX, manualMoveY];\n        turnMarkerEl.dataset.turnIndicator = 'bot';\n        turnMarkerEl2.dataset.turnIndicator = 'bot';\n\n        botMoveStore.push({ move, hitStatus });\n\n        ({ isBot, isHuman } = gameController_.getActivePlayer());\n      } while (isBot);\n\n      botMoveStore.forEach((store, index) => {\n        const { move, hitStatus } = store;\n        setTimeout(\n          () => {\n            const [x, y] = move;\n            const boardItem =\n              humanPlayerStructure.boardNodesContainer.querySelector(\n                `.board-item[data-x='${x}'][data-y='${y}']`,\n              );\n\n            boardItem.dataset.hitStatus = hitStatus;\n            if (hitStatus === 2) {\n              processBotShipSink(gameController_, humanPlayerStructure);\n            }\n\n            botMoveStore.shift();\n            if (botMoveStore.length === 0) {\n              turnMarkerEl.dataset.turnIndicator = 'human';\n              turnMarkerEl2.dataset.turnIndicator = 'human';\n              botPlayerStructure.boardNodesContainer.scrollIntoView({\n                behavior: 'smooth',\n                block: 'center',\n                inline: 'nearest',\n              });\n            }\n          },\n          1000 * (index + 1),\n        );\n      });\n    }\n  });\n\n  homeIconContainer.addEventListener('click', () => {\n    changeScreen(LOAD_SCREEN.loadingScreenContainer);\n  });\n}\n\nfunction playSetupEventListeners(PlaySetupScreen) {\n  const {\n    homeBtn,\n    rotateBtn,\n    shipsElementArr,\n    autoPositionBtn,\n    boardNodesArray,\n    startGameBtn,\n  } = PlaySetupScreen;\n\n  homeBtn.addEventListener('click', () => {\n    changeScreen(HOME_PAGE_SCREEN.homePageContainer);\n  });\n\n  shipsElementArr.forEach((ship) => {\n    ship.addEventListener('click', (e) => {\n      const current = e.currentTarget;\n\n      const { orientation } = current.dataset;\n\n      shipsElementArr.forEach((s) => {\n        if (s !== current) {\n          s.classList.remove('active');\n        }\n      });\n\n      if (orientation === 'horizontal') {\n        rotateBtn.dataset.rotate = 'vertical';\n      } else {\n        rotateBtn.dataset.rotate = 'horizontal';\n      }\n\n      current.classList.toggle('active');\n    });\n  });\n\n  autoPositionBtn.addEventListener('click', () => {\n    GAME_CONTROLLER.autoPlaceHumanPlayerShips();\n    const {\n      carrierInfo,\n      battleShipInfo,\n      destroyerInfo,\n      submarineInfo,\n      patrolBoatInfo,\n    } = GAME_CONTROLLER.humanPlayerShipDetails();\n\n    {\n      const { isOnBoard, placeHead, orientation } = carrierInfo;\n\n      const [x, y] = placeHead;\n\n      const boardItem = document.querySelector(\n        `[data-x='${x}'][data-y='${y}']`,\n      );\n\n      const ship = document.querySelector('.ship.carrier');\n\n      ship.dataset.orientation = orientation;\n\n      if (isOnBoard) {\n        ship.classList.add('active');\n        boardItem.click();\n        ship.classList.remove('active');\n      }\n    }\n\n    {\n      const { isOnBoard, placeHead, orientation } = battleShipInfo;\n\n      const [x, y] = placeHead;\n\n      const boardItem = document.querySelector(\n        `[data-x='${x}'][data-y='${y}']`,\n      );\n\n      const ship = document.querySelector('.ship.battleship');\n\n      ship.dataset.orientation = orientation;\n\n      if (isOnBoard) {\n        ship.classList.add('active');\n        boardItem.click();\n        ship.classList.remove('active');\n      }\n    }\n\n    {\n      const { isOnBoard, placeHead, orientation } = destroyerInfo;\n\n      const [x, y] = placeHead;\n\n      const boardItem = document.querySelector(\n        `[data-x='${x}'][data-y='${y}']`,\n      );\n\n      const ship = document.querySelector('.ship.destroyer');\n\n      ship.dataset.orientation = orientation;\n\n      if (isOnBoard) {\n        ship.classList.add('active');\n        boardItem.click();\n        ship.classList.remove('active');\n      }\n    }\n\n    {\n      const { isOnBoard, placeHead, orientation } = submarineInfo;\n\n      const [x, y] = placeHead;\n\n      const boardItem = document.querySelector(\n        `[data-x='${x}'][data-y='${y}']`,\n      );\n\n      const ship = document.querySelector('.ship.submarine');\n\n      ship.dataset.orientation = orientation;\n\n      if (isOnBoard) {\n        ship.classList.add('active');\n        boardItem.click();\n        ship.classList.remove('active');\n      }\n    }\n\n    {\n      const { isOnBoard, placeHead, orientation } = patrolBoatInfo;\n\n      const [x, y] = placeHead;\n\n      const boardItem = document.querySelector(\n        `[data-x='${x}'][data-y='${y}']`,\n      );\n\n      const ship = document.querySelector('.ship.patrol-boat');\n\n      ship.dataset.orientation = orientation;\n\n      if (isOnBoard) {\n        ship.classList.add('active');\n        boardItem.click();\n        ship.classList.remove('active');\n      }\n    }\n  });\n\n  boardNodesArray.forEach((boardNode) => {\n    boardNode.addEventListener('click', runBoardItem);\n  });\n\n  rotateBtn.addEventListener('click', () => {\n    const { rotate } = PlaySetupScreen.rotateBtn.dataset;\n\n    const activeShip = document.querySelector('.ship.active');\n\n    if (!activeShip) return;\n\n    const { shipSize, name } = activeShip.dataset;\n    let placeDetails = [];\n    let placeHead;\n    let x;\n    let y;\n\n    switch (shipSize) {\n      case '5':\n        ({ placeHead } = GAME_CONTROLLER.humanPlayerShipDetails().carrierInfo);\n        [x, y] = placeHead;\n\n        placeDetails = processShipPlacing(\n          Number(x),\n          Number(y),\n          rotate,\n          name,\n          shipSize,\n        );\n        break;\n\n      case '4':\n        ({ placeHead } =\n          GAME_CONTROLLER.humanPlayerShipDetails().battleShipInfo);\n        [x, y] = placeHead;\n\n        placeDetails = processShipPlacing(\n          Number(x),\n          Number(y),\n          rotate,\n          name,\n          shipSize,\n        );\n        break;\n\n      case '3':\n        if (/^(destroyer)$/i.test(name)) {\n          ({ placeHead } =\n            GAME_CONTROLLER.humanPlayerShipDetails().destroyerInfo);\n          [x, y] = placeHead;\n\n          placeDetails = processShipPlacing(\n            Number(x),\n            Number(y),\n            rotate,\n            name,\n            shipSize,\n          );\n        } else if (/^(submarine)$/i.test(name)) {\n          ({ placeHead } =\n            GAME_CONTROLLER.humanPlayerShipDetails().submarineInfo);\n          [x, y] = placeHead;\n\n          placeDetails = processShipPlacing(\n            Number(x),\n            Number(y),\n            rotate,\n            name,\n            shipSize,\n          );\n        }\n\n        break;\n\n      case '2':\n        ({ placeHead } =\n          GAME_CONTROLLER.humanPlayerShipDetails().patrolBoatInfo);\n        [x, y] = placeHead;\n\n        placeDetails = processShipPlacing(\n          Number(x),\n          Number(y),\n          rotate,\n          name,\n          shipSize,\n        );\n        break;\n\n      default:\n        break;\n    }\n\n    const { attached, newInfo } = placeDetails;\n\n    if (newInfo.orientation.toUpperCase() !== rotate.toUpperCase()) {\n      activeShip.classList.add('fail-place');\n\n      setTimeout(() => {\n        activeShip.classList.remove('fail-place');\n      }, 800);\n\n      return;\n    }\n\n    activeShip.dataset.orientation = rotate.toUpperCase();\n\n    if (/^(horizontal)$/i.test(rotate)) {\n      rotateBtn.dataset.rotate = 'VERTICAL';\n    } else {\n      rotateBtn.dataset.rotate = 'HORIZONTAL';\n    }\n\n    const [start, end] = attached;\n    const [sx, sy] = start;\n    const [ex, ey] = end;\n\n    activeShip.style.gridArea = `X${sx}-Y${sy} / X${sx}-Y${sy} / X${ex}-Y${ey} / X${ex}-Y${ey}`;\n  });\n\n  startGameBtn.addEventListener('click', () => {\n    GAME_CONTROLLER.autoPlaceBotShips();\n    const { roundState } = GAME_CONTROLLER;\n\n    if (!roundState.canPlayRound) return;\n\n    GAME_PLAY_SCREEN = createGamePlayPage();\n    gamePlayScreenEventListeners(GAME_PLAY_SCREEN, GAME_CONTROLLER);\n    changeScreen(GAME_PLAY_SCREEN.gamePlayContainer);\n  });\n}\n\nHOME_PAGE_SCREEN.playBtn.addEventListener('click', () => {\n  PLAY_SETUP_SCREEN = createPlaySetupPage();\n  changeScreen(PLAY_SETUP_SCREEN.gameSetupContainer);\n\n  GAME_CONTROLLER.startRound();\n  botShipSunk = [];\n  humanShipSunk = [];\n  playSetupEventListeners(PLAY_SETUP_SCREEN);\n});\n\nHOME_PAGE_SCREEN.tutorialBtn.addEventListener('click', () => {\n  changeScreen(TUTORIAL_PAGE_SCREEN.tutorialPageContainer);\n});\n\nfunction initialRender() {\n  changeScreen(LOAD_SCREEN.loadingScreenContainer);\n\n  LOAD_SCREEN.line.addEventListener('animationend', () => {\n    LOAD_SCREEN.loadingScreenContainer.classList.add('loading-complete');\n    changeScreen(HOME_PAGE_SCREEN.homePageContainer, 500);\n    setTimeout(() => {\n      LOAD_SCREEN.loadingScreenContainer.classList.remove('loading-complete');\n    }, 650);\n  });\n}\n\ninitialRender();\n","import createElementWithClass from '../helper_module/create-element-with-class.js';\n\nexport default function createLoadScreen() {\n  const loadingScreenContainer = createElementWithClass('div', [\n    'loading-screen',\n    'd-flex__row',\n    'centered_flex',\n  ]);\n\n  const genericContainer = createElementWithClass('div', [\n    'container',\n    'd-flex__col',\n    'gap_2r',\n    'padding_2r',\n  ]);\n\n  const loadingTitleContainer = createElementWithClass('div', [\n    'loading-title',\n    'text-align__center',\n    'd-flex__col',\n    'gap_10',\n  ]);\n\n  const h1 = createElementWithClass('h1', ['text-transform__capitalize']);\n  h1.textContent = 'A Classic Board Game';\n\n  const h2 = createElementWithClass('h2', ['text-transform__capitalize']);\n  h2.textContent = 'Sea Battle';\n\n  loadingTitleContainer.appendChild(h1);\n  loadingTitleContainer.appendChild(h2);\n\n  const loaderCompContainer = createElementWithClass('div', [\n    'loader-container',\n    'd-flex__col',\n    'gap_10',\n  ]);\n\n  const loaderBar = createElementWithClass('div', [\n    'loading-bar',\n    'd-flex__col',\n  ]);\n\n  const loadingLine = createElementWithClass('div', ['loading-line']);\n\n  const line = createElementWithClass('div', ['line']);\n\n  loadingLine.appendChild(line);\n  loaderBar.appendChild(loadingLine);\n\n  const loadingText = createElementWithClass('div', ['loading-text']);\n\n  const h3 = createElementWithClass('h3');\n  const loader = createElementWithClass('div', ['loader']);\n\n  h3.textContent = 'Loading';\n  h3.appendChild(loader);\n\n  loadingText.appendChild(h3);\n\n  loaderCompContainer.appendChild(loaderBar);\n  loaderCompContainer.appendChild(loadingText);\n\n  genericContainer.appendChild(loadingTitleContainer);\n  genericContainer.appendChild(loaderCompContainer);\n\n  loadingScreenContainer.appendChild(genericContainer);\n\n  return { loadingScreenContainer, line };\n}\n","import createElementWithClass from '../helper_module/create-element-with-class.js';\n\nimport TUTORIAL_ICON_SRC from '../images/help.svg';\n\nexport default function createHomePage() {\n  const homePageContainer = createElementWithClass('div', [\n    'home-page',\n    'centered_flex',\n    'd-flex__col',\n    'text-align__center',\n    'text-transform__uppercase',\n  ]);\n\n  const genericContainer = createElementWithClass('div', [\n    'container',\n    'd-flex__col',\n    'centered_flex',\n    'gap_2r',\n  ]);\n\n  const h1 = createElementWithClass('h1', [\n    'home-page__title',\n    'text-transform__capitalize',\n  ]);\n  h1.textContent = 'Sea Battle';\n\n  const homePageBtnGroup = createElementWithClass('div', [\n    'home-page__btn-group',\n    'd-flex__col',\n    'gap_10',\n  ]);\n\n  const playBtn = createElementWithClass('button', [\n    'btn',\n    'play__btn',\n    'cursor_pointer',\n    'text-transform__capitalize',\n  ]);\n  playBtn.textContent = 'play';\n\n  // const settingsBtn = createElementWithClass('button', [\n  //   'btn',\n  //   'settings__btn',\n  //   'cursor_pointer',\n  //   'text-transform__capitalize',\n  // ]);\n\n  // settingsBtn.textContent = 'settings';\n\n  homePageBtnGroup.appendChild(playBtn);\n  // homePageBtnGroup.appendChild(settingsBtn);\n\n  const tutorialBtnContainer = createElementWithClass('div', [\n    'tutorial-btn-container',\n  ]);\n\n  const tutorialBtn = createElementWithClass('button', [\n    'btn',\n    'cursor_pointer',\n    'icon_container',\n  ]);\n\n  const tutorialImg = createElementWithClass('img', ['img']);\n  tutorialImg.src = TUTORIAL_ICON_SRC;\n  tutorialImg.alt = '';\n\n  tutorialBtn.appendChild(tutorialImg);\n  tutorialBtnContainer.appendChild(tutorialBtn);\n\n  genericContainer.appendChild(h1);\n  genericContainer.appendChild(homePageBtnGroup);\n  genericContainer.appendChild(tutorialBtnContainer);\n\n  homePageContainer.appendChild(genericContainer);\n\n  return { homePageContainer, playBtn, tutorialBtn };\n}\n","import createElementWithClass from '../helper_module/create-element-with-class.js';\n\nimport HOME_IMG_SRC from '../images/home.svg';\n\nexport default function createRoundLossPage() {\n  const roundLossDialog = createElementWithClass('dialog', [\n    'round-loss-dialog',\n    'd-flex__col',\n    'align-items__center',\n    'justify-content__center',\n  ]);\n\n  const genericContainer = createElementWithClass('div', [\n    'dialog-content',\n    'container',\n    'd-flex__col',\n    'align-items__center',\n    'justify-content__center',\n    'gap_2r',\n  ]);\n\n  const dialogHeader = createElementWithClass('h1', [\n    'text-transform__capitalize',\n    'dialog-header',\n  ]);\n\n  dialogHeader.textContent = 'YOU LOSE';\n\n  const btnGroup = createElementWithClass('div', ['btn-group', 'd-flex__row']);\n\n  const homeBtn = createElementWithClass('div', [\n    'home-btn',\n    'btn',\n    'icon-container',\n  ]);\n\n  const homeBtnImg = createElementWithClass('img', ['img']);\n\n  homeBtnImg.src = HOME_IMG_SRC;\n  homeBtnImg.alt = '';\n\n  homeBtn.appendChild(homeBtnImg);\n\n  btnGroup.appendChild(homeBtn);\n\n  genericContainer.appendChild(dialogHeader);\n  genericContainer.appendChild(btnGroup);\n\n  roundLossDialog.appendChild(genericContainer);\n\n  return {\n    roundLossDialog,\n    homeBtn,\n  };\n}\n","import createElementWithClass from '../helper_module/create-element-with-class.js';\n\nimport HOME_IMG_SRC from '../images/home.svg';\n\nexport default function createRoundWinPage() {\n  const roundWinDialog = createElementWithClass('dialog', [\n    'round-win-dialog',\n    'd-flex__col',\n    'align-items__center',\n    'justify-content__center',\n  ]);\n\n  const genericContainer = createElementWithClass('div', [\n    'dialog-content',\n    'container',\n    'd-flex__col',\n    'align-items__center',\n    'justify-content__center',\n    'gap_2r',\n  ]);\n\n  const dialogHeader = createElementWithClass('h1', [\n    'text-transform__capitalize',\n    'dialog-header',\n  ]);\n\n  dialogHeader.textContent = 'YOU WIN';\n\n  const btnGroup = createElementWithClass('div', ['btn-group', 'd-flex__row']);\n\n  const homeBtn = createElementWithClass('div', [\n    'home-btn',\n    'btn',\n    'icon_container',\n  ]);\n\n  const homeBtnImg = createElementWithClass('img', ['img']);\n\n  homeBtnImg.src = HOME_IMG_SRC;\n  homeBtnImg.alt = '';\n\n  homeBtn.appendChild(homeBtnImg);\n\n  btnGroup.appendChild(homeBtn);\n\n  genericContainer.appendChild(dialogHeader);\n  genericContainer.appendChild(btnGroup);\n\n  roundWinDialog.appendChild(genericContainer);\n\n  return {\n    roundWinDialog,\n    homeBtn,\n  };\n}\n","import createElementWithClass from '../helper_module/create-element-with-class.js';\nimport HOME_ICON_SRC from '../images/home.svg';\n\nexport default function createTutorialPage() {\n  const guideLines = [\n    {\n      header: 'Ship Placing',\n      content:\n        'Start by arranging your ships on the grid. You can choose specific coordinates for each ship or use the auto-placement option for a quick setup.',\n    },\n\n    {\n      header: 'Taking Turn',\n      content:\n        'After ship placement, the game begins. On your turn, select a coordinate on the opponent&apos;s grid to launch an attack. The computer will then take its turn. This will continue until game is over',\n    },\n\n    {\n      header: 'Hits and Misses',\n      content:\n        ' A <b>hit</b> is marked when your shot lands on an enemy ship. A <b>miss</b> indicates an empty space. - Each player&apos;s gameboard visually updates to reflect hits and misses. Hit is indicted by a red grid box. A miss indicated by a gray grid box.',\n    },\n\n    {\n      header: 'Winning and Losing',\n      content:\n        'The game continues until one player sinks all of the opponent&apos;s ships. If you&apos;re the last one standing, you win!',\n    },\n  ];\n\n  const tutorialPageContainer = createElementWithClass('div', [\n    'tutorial-page',\n    'd-flex__col',\n    'centered_flex',\n  ]);\n\n  const genericContainer = createElementWithClass('div', [\n    'container',\n    'd-flex__col',\n    'padding_2r',\n    'gap_1r',\n  ]);\n\n  const pageHeaderContainer = createElementWithClass('div', [\n    'd-flex__row',\n    'align-items__center',\n    'justify-content__space-around',\n  ]);\n\n  const pageHeader = createElementWithClass('h1', [\n    'text-align__center',\n    'text-transform__capitalize',\n  ]);\n\n  pageHeader.textContent = 'how to play';\n\n  const tutorialContentContainer = createElementWithClass('div', [\n    'd-flex__col',\n    'align-items__center',\n  ]);\n\n  const tutorialList = createElementWithClass('ul', [\n    'd-flex__col',\n    'gap_2r',\n    'padding_2r',\n    'tutorial-container',\n    'align-items__center',\n  ]);\n\n  guideLines.forEach((help) => {\n    const { header, content } = help;\n\n    const li = createElementWithClass('li');\n    const h2 = createElementWithClass('h2', [\n      'text-transform__lowercase',\n      'text-align__center',\n    ]);\n    const p = createElementWithClass('p');\n    const container = createElementWithClass('article', [\n      'd-flex__col',\n      'gap_1r',\n    ]);\n\n    h2.textContent = header;\n    p.innerHTML = content;\n\n    container.appendChild(h2);\n    container.appendChild(p);\n\n    li.appendChild(container);\n    tutorialList.appendChild(li);\n  });\n\n  const homeBtn = createElementWithClass('button', [\n    'btn',\n    'icon_container',\n    'd-flex__col',\n    'centered_flex',\n    'cursor_pointer',\n  ]);\n\n  const homeImg = createElementWithClass('img', ['img']);\n\n  homeImg.src = HOME_ICON_SRC;\n  homeImg.alt = '';\n\n  homeBtn.appendChild(homeImg);\n\n  pageHeaderContainer.appendChild(pageHeader);\n  pageHeaderContainer.appendChild(homeBtn);\n\n  tutorialContentContainer.appendChild(tutorialList);\n\n  genericContainer.appendChild(pageHeaderContainer);\n  genericContainer.appendChild(tutorialContentContainer);\n\n  tutorialPageContainer.appendChild(genericContainer);\n\n  return { tutorialPageContainer, homeBtn };\n}\n","import createElementWithClass from '../helper_module/create-element-with-class.js';\nimport { reverseTransform } from '../helper_module/number-transform.js';\n\nimport ROTATE_IMG_SRC from '../images/phone-rotate-landscape.svg';\nimport HOME_IMG_SRC from '../images/home.svg';\n\nexport default function createPlaySetupPage() {\n  const BOARD_SIZE = 10;\n  const rowSize = 10;\n  const colSize = 10;\n  const BOARD_NODES_COUNT = rowSize * colSize;\n\n  const gameSetupContainer = createElementWithClass('div', [\n    'game-setup',\n    'd-flex__col',\n    'centered_flex',\n  ]);\n\n  const genericContainer = createElementWithClass('div', [\n    'container',\n    'd-flex__col',\n    'gap_2r',\n    'centered_flex',\n  ]);\n\n  const boardContainer = createElementWithClass('div', ['board']);\n  const boardNodesContainer = createElementWithClass('div', [\n    'board-item-container',\n    'gap_2',\n  ]);\n  const boardNodesArray = [];\n\n  for (let i = 0; i < BOARD_NODES_COUNT; i += 1) {\n    const boardItem = createElementWithClass('button', [\n      'board-item',\n      'cursor_pointer',\n    ]);\n\n    const [x, y] = reverseTransform(i, BOARD_SIZE);\n    boardItem.dataset.x = x;\n    boardItem.dataset.y = y;\n    boardItem.style.gridArea = `X${x}-Y${y}`;\n    boardNodesContainer.appendChild(boardItem);\n    boardNodesArray.push(boardItem);\n  }\n\n  const rowLabel = createElementWithClass('div', [\n    'row-label',\n    'gap_2',\n    'text-transform__uppercase',\n  ]);\n  const colLabel = createElementWithClass('div', [\n    'col-label',\n    'gap_2',\n    'text-transform__uppercase',\n  ]);\n\n  const labelItemsDetails = [\n    {\n      category: 'rowLabel',\n      itemsCount: rowSize,\n      classNames: ['label-item', 'centered_flex', 'd-flex__row'],\n      createdItemsCount: 0,\n    },\n    {\n      category: 'colLabel',\n      itemsCount: colSize,\n      classNames: ['label-item', 'centered_flex', 'd-flex__col'],\n      createdItemsCount: 0,\n    },\n  ];\n\n  labelItemsDetails.forEach((labelItemDetails) => {\n    const { category, itemsCount, classNames } = labelItemDetails;\n    let { createdItemsCount } = labelItemDetails;\n\n    while (createdItemsCount < itemsCount) {\n      const labelItem = createElementWithClass('div', [...classNames]);\n      let textContent = '';\n\n      if (category === 'rowLabel') {\n        textContent = String.fromCharCode(createdItemsCount + 65);\n        labelItem.textContent = textContent;\n        rowLabel.appendChild(labelItem);\n      }\n\n      if (category === 'colLabel') {\n        textContent = `${createdItemsCount + 1}`;\n        labelItem.textContent = textContent;\n        colLabel.appendChild(labelItem);\n      }\n\n      createdItemsCount += 1;\n    }\n  });\n\n  boardContainer.appendChild(rowLabel);\n  boardContainer.appendChild(colLabel);\n  boardContainer.appendChild(boardNodesContainer);\n\n  const shipsDetails = [\n    {\n      classNames: [\n        'ship',\n        'z_index_2',\n        'd-flex__col',\n        'cursor_pointer',\n        'gap_2',\n        'carrier',\n      ],\n      shipSize: 5,\n      orientation: 'vertical',\n      active: false,\n      name: 'carrier',\n    },\n\n    {\n      classNames: [\n        'ship',\n        'z_index_2',\n        'd-flex__col',\n        'cursor_pointer',\n        'battleship',\n        'gap_2',\n      ],\n      shipSize: 4,\n      orientation: 'vertical',\n      active: false,\n      name: 'battleship',\n    },\n\n    {\n      classNames: [\n        'ship',\n        'z_index_2',\n        'd-flex__col',\n        'cursor_pointer',\n        'gap_2',\n        'destroyer',\n      ],\n      shipSize: 3,\n      orientation: 'vertical',\n      active: false,\n      name: 'destroyer',\n    },\n\n    {\n      classNames: [\n        'ship',\n        'z_index_2',\n        'd-flex__col',\n        'cursor_pointer',\n        'submarine',\n        'gap_2',\n      ],\n      shipSize: 3,\n      orientation: 'vertical',\n      active: false,\n      name: 'submarine',\n    },\n\n    {\n      classNames: [\n        'ship',\n        'z_index_2',\n        'd-flex__col',\n        'cursor_pointer',\n        'patrol-boat',\n        'gap_2',\n      ],\n      shipSize: 2,\n      orientation: 'vertical',\n      active: false,\n      name: 'patrol_boat',\n    },\n  ];\n\n  const shipBtnGroupContainer = createElementWithClass('div', [\n    'ship-yard-btn-group-container',\n    'd-flex__col',\n    'gap_2r',\n    'justify-content__space-around',\n  ]);\n\n  const shipsContainer = createElementWithClass('div', [\n    'ship-yard',\n    'd-flex__row',\n    'gap_10',\n  ]);\n\n  const shipsElementArr = [];\n\n  shipsDetails.forEach((shipDetails) => {\n    const { classNames, orientation, active, shipSize, name } = shipDetails;\n\n    const shipContainer = createElementWithClass('div', [...classNames]);\n    shipContainer.dataset.active = active;\n    shipContainer.dataset.orientation = orientation;\n    shipContainer.dataset.name = name;\n    shipContainer.dataset.shipSize = shipSize;\n\n    for (let i = 0; i < shipSize; i += 1) {\n      const shipNode = createElementWithClass('div', ['ship-node']);\n      shipContainer.appendChild(shipNode);\n    }\n\n    shipsContainer.appendChild(shipContainer);\n    shipsElementArr.push(shipContainer);\n  });\n\n  const btnGroupContainer = createElementWithClass('div', [\n    'btn-group',\n    'd-flex__row',\n    'gap_10',\n  ]);\n\n  const rotateBtnImg = createElementWithClass('img');\n  rotateBtnImg.src = ROTATE_IMG_SRC;\n  rotateBtnImg.alt = 'Rotate Image';\n\n  const rotateBtn = createElementWithClass('button', [\n    'btn',\n    'text-transform__lowercase',\n    'cursor_pointer',\n    'icon_container',\n    'rotate',\n  ]);\n  rotateBtn.dataset.rotate = 'horizontal';\n\n  rotateBtn.appendChild(rotateBtnImg);\n\n  const autoPositionBtn = createElementWithClass('button', [\n    'btn',\n    'text-transform__lowercase',\n    'cursor_pointer',\n    'auto-position',\n  ]);\n  autoPositionBtn.textContent = 'auto';\n\n  const startGameBtn = createElementWithClass('button', [\n    'btn',\n    'text-transform__lowercase',\n    'cursor_pointer',\n    'start-game',\n  ]);\n\n  startGameBtn.textContent = 'start';\n\n  btnGroupContainer.appendChild(rotateBtn);\n  btnGroupContainer.appendChild(autoPositionBtn);\n  btnGroupContainer.appendChild(startGameBtn);\n\n  shipBtnGroupContainer.appendChild(shipsContainer);\n  shipBtnGroupContainer.appendChild(btnGroupContainer);\n\n  const homeBtnContainer = createElementWithClass('div', [\n    'home-btn-container',\n  ]);\n\n  const homeImg = createElementWithClass('img', ['img']);\n  homeImg.src = HOME_IMG_SRC;\n  homeImg.alt = 'Home Icon';\n\n  const homeBtn = createElementWithClass('button', [\n    'btn',\n    'text-transform__lowercase',\n    'icon_container',\n    'home_btn',\n    'cursor_pointer',\n  ]);\n\n  homeBtn.appendChild(homeImg);\n  homeBtnContainer.appendChild(homeBtn);\n\n  genericContainer.appendChild(boardContainer);\n  genericContainer.appendChild(shipBtnGroupContainer);\n  genericContainer.appendChild(homeBtnContainer);\n\n  gameSetupContainer.appendChild(genericContainer);\n\n  return {\n    gameSetupContainer,\n    homeBtn,\n    shipsElementArr,\n    boardNodesArray,\n    boardNodesContainer,\n    rotateBtn,\n    startGameBtn,\n    autoPositionBtn,\n  };\n}\n"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","options","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","createElementWithClass","classNames","ELEMENT","forEach","className","classList","add","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","test","replace","p","nc","transform","x","y","reverseTransform","Math","floor","BOARD_AREA","BOARD_X_SIZE","BOARD_Y_SIZE","GAME_SETTINGS","shipsDetails","shipSize","orientation","sunk","name","buildPlayerStructure","_ref","boardNodesContainer","rowLabelContainer","colLabelContainer","boardNodeClassNames","boardNode","_reverseTransform2","_slicedToArray","dataset","hasShip","mask","hitStatus","gridArea","colLabelItem","rowLabelItem","rowTextContent","String","fromCharCode","colTextContent","textContent","Ship","_classCallCheck","_HasPlaceOrigin","_classPrivateFieldInitSpec","_size","writable","value","_hitsCount","_name","_orientation","_placeHead","isValidLength","_classPrivateFieldSet","trim","isSunk","_classPrivateFieldGet","hasPlaceOrigin","_classPrivateMethodGet","_HasPlaceOrigin2","assignedOrientation","size","_classPrivateFieldGet2","isValidOrientation","_classPrivateFieldGet3","_occupant","WeakMap","_isHit","_neighbors","Node","address","neighbor","isHit","isNeighboringSunk","isOccupied","hit","ship","every","occupantShipSunk","Carrier","_Ship","_inherits","_super","Destroyer","Submarine","BattleShip","PatrolBoat","isPositiveNumber","number","arguments","getRndElement","array","rnd","random","BOARD_SPECS","_NODES","_CARRIER","_BATTLESHIP","_DESTROYER","_SUBMARINE","_PATROL_BOAT","_initializeShips","WeakSet","_initializeNodes","_assignNeighbors","_hasTakenHit","_getNode","_getCanReceiveShipNodes","_availableForShip","_canReceiveShip","_replaceShip","_placeShip","_removeShip","_autoPlaceShip","_allShipsOnBoard","GameBoard","_classPrivateMethodInitSpec","_initializeNodes2","_initializeShips2","BOARD","copy","carrierInfo","battleShipInfo","destroyerInfo","submarineInfo","patrolBoatInfo","isOnBoard","placeHead","placeCarrier","_placeHead3","placeBattleShip","_placeHead5","placeDestroyer","_placeHead7","placeSubmarine","_placeHead9","placePatrolBoat","allShipsOnBoard","hitCoordinates","_ref2","receiveAttack","SHIP","_SHIP$shipInfo","shipInfo","_SHIP$assignedPlaceOr","assignedPlaceOrigin","_GameBoard$BOARD_X_Y","BOARD_X_Y","boardXSize","boardYSize","isValidBoardCoordinate","toBeOccupied","occupied","BASE","temp","getToBeOccupied","loc","_loc","toBeOccupiedNeighbors","Set","_address3","nx","ny","_neighbor","b","includes","_toConsumableArray","filter","node","isNeighboringOccupied","formatShipInfo","_placeShip2","_removeShip2","_classPrivateMethodGe","_autoPlaceShip2","_classPrivateMethodGe2","_classPrivateMethodGe3","_classPrivateMethodGe4","_classPrivateMethodGe5","autoPlaceCarrier","autoPlaceBattleShip","autoPlaceDestroyer","autoPlacePatrolBoat","autoPlaceSubmarine","_allShipsOnBoard2","_getNode2","available","unHit","_address","_address2","_this","BOARD_SIZE","BOARD_X","_assignNeighbors2","_this2","_address4","_neighbor2","nodeNeighbor","addNeighbor","_hasTakenHit2","some","_getCanReceiveShipNodes2","_this3","availableNodes","canPlace","_node$address","_canReceiveShip2","_availableForShip2","horizontalPlacements","verticalPlacements","nodeLocations","_this4","nodeLocation","_nodeLocation","_replaceShip2","newOrientation","originalInfo","_placeHead10","_this5","_class$formatShipInfo2","_nodeLocation2","occupy","assignOrientation","assignPlaceOrigin","_this6","_class$formatShipInfo3","_placeHead11","_nodeLocation3","removeOccupant","removeAssignedPlaceOrigin","removeAssignedOrientation","_loc2","_class","_defineProperty","_PLAYER_BOARD","_NAME","Player","createCopy","unHitCoordinates","removeCarrier","removeBattleShip","removeDestroyer","removeSubmarine","removePatrolBoat","autoPlaceAllShips","HumanPlayer","_Player","ComputerPlayer","enemy","allShipSunk","validMoves","_HUMAN_PLAYER","_COMPUTER_PLAYER","_activePlayer","_HIT_STATUS_","_ROUND_WINNER_NAME","_ROUND_WON","_switchActivePlayer","_canAddPlayer","_botMove","GameRound","_canAddPlayer2","playerName","isBot","isHuman","placeSubMarine","_classPrivateFieldGet5","getAttack","move","_botMove2","_switchActivePlayer2","roundWon","winnerName","_GAME_ROUND","_ROUND_START","GameController","placeHumanPlayerCarrier","placeHumanPlayerBattleShip","placeHumanPlayerDestroyer","placeHumanPlayerSubMarine","placeHumanPlayerPatrolBoat","autoPlaceHumanShips","autoPlaceBotShips","humanPlayerDetails","botPlayerDetails","humanPlayerShipDetails","botShipDetails","state","roundState","canPlayRound","_objectSpread","getActivePlayer","botMove","humanPlayerMove","addBotPlayer","addHumanPlayer","locals","PLAY_SETUP_SCREEN","GAME_PLAY_SCREEN","GAME_CONTROLLER","LOAD_SCREEN","loadingScreenContainer","genericContainer","loadingTitleContainer","h1","h2","loaderCompContainer","loaderBar","loadingLine","line","loadingText","h3","loader","createLoadScreen","HOME_PAGE_SCREEN","homePageContainer","homePageBtnGroup","playBtn","tutorialBtnContainer","tutorialBtn","tutorialImg","TUTORIAL_ICON_SRC","alt","createHomePage","ROUND_LOSS_MODAL","roundLossDialog","dialogHeader","btnGroup","homeBtn","homeBtnImg","HOME_IMG_SRC","createRoundLossPage","ROUND_WIN_MODAL","roundWinDialog","createRoundWinPage","TUTORIAL_PAGE_SCREEN","tutorialPageContainer","pageHeaderContainer","pageHeader","tutorialContentContainer","tutorialList","header","help","li","container","innerHTML","homeImg","HOME_ICON_SRC","createTutorialPage","DOC_BODY","changeScreen","incoming","delay","setTimeout","openModal","modalEl","showModal","closeModal","close","attachShipToBoard","occupyingLoc","slice","processShipPlacing","oldInfo","attached","newInfo","Number","runBoardItem","activeShip","_activeShip$dataset","_current$dataset","currentTarget","_processShipPlacing","_attached","start","end","_start","sx","sy","_end","ex","ey","addEventListener","humanShipSunk","botShipSunk","placeShipOnPlayerBoard","playerElementStruct","placementShipsDetails","addMask","boardClassName","keys","shipPlacement","_loc3","boardItem","playSetupEventListeners","PlaySetupScreen","rotateBtn","shipsElementArr","autoPositionBtn","boardNodesArray","startGameBtn","current","s","rotate","toggle","autoPlaceHumanPlayerShips","_GAME_CONTROLLER$huma","_placeHead2","click","_placeHead4","_placeHead6","_placeHead8","_activeShip$dataset2","placeDetails","_placeHead12","_placeHead14","_placeHead16","_placeHead18","_placeHead20","_placeDetails","_attached2","_start2","_end2","gamePlayScreen","gameController_","turnMarkers","humanPlayerStructure","botPlayerStructure","homeIconContainer","_gameController_$getA","_turnMarkers","turnMarkerEl","turnMarkerEl2","botMoveStore","turnIndicator","botPlayerShipDetails","playerBoard","contains","_target$dataset","GAME__CONTROLLER","BOT_PLAYER_EL_STRUCTURE","values","shipDetails","neighborLoc","getNeighboringLoc","botShipYard","processHumanShipSink","_gameController_$getA2","scrollIntoView","block","inline","behavior","_gameController_$comp","computerPlayerMove","_gameController_$getA3","store","_move","HUMAN_EL_STRUCTURE","processBotShipSink","shift","gamePlayScreenEventListeners","gamePlayContainer","humanPlayerSecContainer","verticalDividerContainer","botPlayerSecContainer","smallScreenDivider","verticalDivider1","verticalDivider2","horizontalDivider1","horizontalDivider2","genericDiv","humanWaterHeader","humanPlayerBoard","humanRowLabel","humanColLabel","humanBoardNodesContainer","horizontalDividerContainer1","horizontalDivider3","genericDiv2","gameDashBoardContainer","playerDescContainer","accountIconContainer","accountIconImg","ACCOUNT_ICON_SRC","pTag1","robotIconContainer","robotIconImg","ROBOT_ICON_SRC","verticalDividerContainer2","verticalDivider3","gameControlsContainer","homeIconImg","genericDiv3","botWaterHeader","botPlayerBoard","botRowLabelEl","botColLabelEl","botBoardNodesContainer","horizontalDividerContainer2","horizontalDivider4","genericDiv4","shipYardSecHeader","shipYardContainer","_shipContainer$classL","shipContainer","shipNode","createGamePlayPage","gameSetupContainer","boardContainer","rowSize","rowLabel","colLabel","category","itemsCount","createdItemsCount","labelItemDetails","labelItem","shipBtnGroupContainer","shipsContainer","active","btnGroupContainer","rotateBtnImg","ROTATE_IMG_SRC","homeBtnContainer","createPlaySetupPage","startRound"],"sourceRoot":""}